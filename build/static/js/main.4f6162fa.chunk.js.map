{"version":3,"sources":["assets/components/CardSection/CardSection.js","components/CheckoutForm/CheckoutForm.js","components/Abonnement/Abonnement.js","assets/components/QRCode/QrCode.js","assets/QRCodeTicket/QRCodeTicket.js","firebase.js","components/Profil/Profil.js","components/Connexion/Connexion.js","components/Inscription/Inscription.js","components/ConnexionAbo/ConnexionAbo.js","assets/components/DailyMenu/DailyMenu.js","components/Personnel/Personnel.js","components/HomePage/HomePage.js","assets/components/OtherMenu/OtherMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/InscriptionParrainage/inscriptionParrainage.js","assets/components/Navbar/Navbar.js","assets/components/Deconnexion/Deconnexion.js","assets/components/Footer/Footer.js","components/dataClient/dataClient.js","components/App/App.js","serviceWorker.js","index.js"],"names":["CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","Component","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","event","createSubscription","a","customerId","paymentMethodId","priceId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","response","json","result","error","window","alert","message","subscription","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","type","card","paymentMethod","console","log","id","className","onSubmit","disabled","stripePromise","loadStripe","Abonnement","Container","Row","Col","QrHook","useState","componentRef","React","useRef","onBeforeGetContentResolve","loading","setLoading","text","setText","handleAfterPrint","useCallback","handleBeforePrint","handleOnBeforeGetContent","Promise","resolve","current","setTimeout","reactToPrintContent","handlePrint","useReactToPrint","content","documentTitle","onBeforeGetContent","onBeforePrint","onAfterPrint","removeAfterPrint","useEffect","uri","QRCODE","document","getElementById","encodeURI","width","height","titleFont","titleColor","titleBackgroundColor","titleHeight","titleTop","subTitleFont","subTitleColor","subTitleTop","src","ref","onClick","QrCode","props","state","QrHookTicket","QrCodeTicket","isLoading","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","storage","UploadPicture","setImageStorage","images","setImages","setMessage","getMonProfil","Headers","responseObject","logo","e","data","FormData","target","name","onChange","files","Profil","handleShow","setState","show","handleClose","renderButtonSub","profil","abonne","variant","history","push","buttonEdit","editing","putProfilOnClick","buttonCancel","handleInput","value","monProfil","setItem","restaurantName","checkGeneral","pourboireGeneral","checkIndividuel","pourboireIndividuel","unSubscription","modifProfil","bossName","adress","city","email","bossFirstName","phone","modifProfilLogo","postParrainage","responseData","redirect","this","md","Value","placeholder","checked","for","xs","Button","confirm","setLogin","Connexion","addLogin","password","token","userId","location","buttonText","declineButtonText","expires","enableDeclineButton","onDecline","cookieName","background","declineButtonStyle","borderRadius","padding","fontWeight","buttonStyle","fontfamily","href","Form","Group","controlId","Control","ClassName","to","Label","Inscription","addNewRegister","checkIndiv","checkGen","Check","label","required","marginLeft","block","span","offset","UploadMenu","setLabel","dailyMenu","setDailyMenu","getDailyMenu","menu","picture","err","Card","Body","Img","alt","deleteMenu","DailyMenu","Personnel","getWaiterList","serveur","renderMesServeurs","tabServeur","map","element","serveurName","serveurLastName","Image","serveurPicture","roundedCircle","mail","serveurMail","addAffiliation","false","addReferent","crew","slidesPerPage","slidesPerScroll","clickToChange","centered","infinite","breakpoints","1000","500","animationSpeed","messageAffi","Tuto","setShow","Modal","onHide","animation","backdrop","keyboard","Header","closeButton","Title","Footer","HomePage","reactToPrintTrigger","getRestaurantName","parse","s","restaurant","OtherMenu","getOtherMenu","noMenu","otherMenu","length","Carousel","display","index","contentDisplay","Item","multiple","accept","Menu","sm","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","InscriptionParrainage","firstname","lastname","noon","evening","date","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","clear","deleteProfil","modalDelete","showModal","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","AlertDismissible","client","updateClient","getDataClient","clientInfo","arr","Alert","Heading","unSubscrition","class","table","filename","sheet","Table","striped","bordered","hover","age","DataClient","App","Navbar","exact","path","render","component","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"gzBAOMA,G,cAAuB,CAC3BC,MAAO,CACLC,KAAM,CACJC,MAAO,UACPC,WAAY,0CACZC,cAAe,cACfC,SAAU,OACV,gBAAiB,CACfH,MAAO,YAGXI,QAAS,CACPJ,MAAO,UACPK,UAAW,cAiBFC,E,uKAXX,OACE,6BACE,0CAEE,kBAAC,cAAD,CAAaC,QAASV,U,GANNW,a,OClBX,SAASC,IACtB,IAAMC,EAASC,sBACTC,EAAWC,wBACXC,EAAY,uCAAG,WAAOC,GAAP,cA2CVC,EA3CU,SAAAC,EAAA,yDA2CVD,EA3CU,YA2CoD,IAAzCE,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACzD,OACEC,MACE,uEACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,UAElDC,KAAMC,KAAKC,UAAU,CACnBX,WAAYA,EACZC,gBAAiBA,EACjBC,QAAS,qCAIZU,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACG,GACL,GAAIA,EAAOC,MAGT,MAFAC,OAAOC,MAAMH,EAAOI,SAEdJ,EAER,OAAOA,KAIRH,MAAK,SAACG,GAEL,OADAE,OAAOC,MAAMH,EAAOI,SACb,CACLlB,gBAAiBA,EACjBC,QAASA,EACTkB,aAAcL,OA5ExBlB,EAAMwB,iBACD7B,GAAWE,EAJG,wDAYb4B,EAAc5B,EAAS6B,WAAWC,eAZrB,SAmBoBhC,EAAOiC,oBAAoB,CAChEC,KAAM,OACNC,KAAML,IArBW,gBAmBXN,EAnBW,EAmBXA,MAAOY,EAnBI,EAmBJA,cAIXZ,EACFa,QAAQC,IAAI,8BAA+Bd,IAE3Ca,QAAQC,IAAI,kBAAmBF,GACzB3B,EAAkB2B,EAAcG,GACnB,GACH,GAYhBjC,EAAmB,CAAEE,WAbF,GAacC,kBAAiBC,QAZlC,MA7BC,4CAAH,sDAqGlB,OACE,0BAAM8B,UAAU,SAASC,SAAUrC,GACjC,kBAAC,EAAD,MAQA,4BAAQoC,UAAU,wBAAwBE,UAAW1C,GAArD,oCC3GN,IAAM2C,EAAgBC,YACpB,+GAoBaC,E,uKAfX,OACE,kBAACC,EAAA,EAAD,CAAWN,UAAU,iBACnB,kBAACO,EAAA,EAAD,CAAKP,UAAU,kBACb,kBAACQ,EAAA,EAAD,KACE,iFACA,kBAAC,WAAD,CAAUR,UAAU,UAAUxC,OAAQ2C,GACpC,kBAAC,EAAD,c,GARW7C,a,wDCHzB,SAASmD,IAAU,IAAD,EACoBC,qBADpB,mBAEVC,GAFU,UAEKC,IAAMC,OAAO,OAC5BC,EAA4BF,IAAMC,OAAO,MAH/B,EAKcD,IAAMF,UAAS,GAL7B,mBAKTK,EALS,KAKAC,EALA,OAMQJ,IAAMF,SAAS,mBANvB,mBAMTO,EANS,KAMHC,EANG,KAUVC,EAAmBP,IAAMQ,aAAY,WACzCvB,QAAQC,IAAI,2BACX,IAEGuB,EAAoBT,IAAMQ,aAAY,WAC1CvB,QAAQC,IAAI,4BACX,IAEGwB,EAA2BV,IAAMQ,aAAY,WAKjD,OAJAvB,QAAQC,IAAI,+BACZkB,GAAW,GACXE,EAAQ,uBAED,IAAIK,SAAQ,SAACC,GAClBV,EAA0BW,QAAUD,EAEpCE,YAAW,WACTV,GAAW,GACXE,EAAQ,sBACRM,MACC,UAEJ,CAACR,EAAYE,IAEVS,EAAsBf,IAAMQ,aAAY,WAC5C,OAAOT,EAAac,UACnB,CAACd,EAAac,UAEXG,EAAcC,0BAAgB,CAClCC,QAASH,EACTI,cAAe,kBACfC,mBAAoBV,EACpBW,cAAeZ,EACfa,aAAcf,EACdgB,kBAAkB,IAGpBvB,IAAMwB,WAAU,WAEH,uBAATnB,GAC6C,oBAAtCH,EAA0BW,SAEjCX,EAA0BW,YAE3B,CAACX,EAA0BW,QAASR,IAEvC,IAAIoB,EACF,sEACA9D,aAAaC,QAAQ,mBAoCvB,OAlCA4D,qBAAU,WACR,IAAIE,IAAOC,SAASC,eAAe,kBAAmB,CACpDvB,KAAMwB,UAAUJ,GAChBK,MAAO,IACPC,OAAQ,IAERC,UAAW,uBACXC,WAAY,UACZC,qBAAsB,OACtBC,YAAa,GACbC,SAAU,GAEVC,aAAc,wBACdC,cAAe,UACfC,YAAa,KAGf,IAAIb,IAAOC,SAASC,eAAe,mBAAoB,CACrDvB,KAAMwB,UAAUJ,GAChBK,MAAO,IACPC,OAAQ,IAERC,UAAW,uBACXC,WAAY,UACZC,qBAAsB,OACtBC,YAAa,GACbC,SAAU,GAEVC,aAAc,wBACdC,cAAe,UACfC,YAAa,OAEd,IAGD,6BACE,kBAAC5C,EAAA,EAAD,CAAKP,UAAU,8BACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,eACb,kBAACO,EAAA,EAAD,CAAKP,UAAU,WACb,kBAACQ,EAAA,EAAD,KACE,wBAAIR,UAAU,aACXzB,aAAaC,QAAQ,qBAG1B,kBAACgC,EAAA,EAAD,CAAKR,UAAU,eACb,yBAAKD,GAAG,oBAEV,kBAACS,EAAA,EAAD,KACE,yBACE4C,IAAI,+BACJpD,UAAU,qBAKlB,kBAACQ,EAAA,EAAD,CAAKR,UAAU,gBACb,kBAACO,EAAA,EAAD,CAAKP,UAAU,YACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACZ,IACD,yBAAKoD,IAAI,sBAAsBpD,UAAU,mBAE3C,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACb,yBAAKoD,IAAI,0BAA0BpD,UAAU,sBAKrD,yBAAKA,UAAU,WACb,yBAAKD,GAAG,YAAYsD,IAAK1C,GACvB,kBAACJ,EAAA,EAAD,CAAKP,UAAU,oBACb,kBAACQ,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,CAAKP,UAAU,WACb,kBAACQ,EAAA,EAAD,KACE,uBAAGR,UAAU,aACVzB,aAAaC,QAAQ,qBAG1B,kBAACgC,EAAA,EAAD,KACE,yBAAKT,GAAG,qBAEV,kBAACS,EAAA,EAAD,KACE,yBACE4C,IAAI,+BACJpD,UAAU,kBAKlB,kBAACQ,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,CAAKP,UAAU,YACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACZ,IACD,yBAAKoD,IAAI,sBAAsBpD,UAAU,gBAE3C,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACb,yBAAKoD,IAAI,0BAA0BpD,UAAU,mBAKpDe,GAAW,uBAAGf,UAAU,aAAb,oBAIhB,4BAAQA,UAAU,eAAesD,QAAS1B,GAA1C,8B,IAsBS2B,E,kDAdb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,kGAMjB,OACE,kBAAClD,EAAA,EAAD,CAAKP,UAAU,UACb,kBAACS,EAAD,CAAQT,UAAU,Y,GATL1C,a,OCjLrB,SAASoG,EAAaF,GACpB,IAAM7C,EAAeC,IAAMC,OAAO,MAE5BC,EAA4BF,IAAMC,OAAO,MAHpB,EAKGD,IAAMF,UAAS,GALlB,mBAKpBK,EALoB,KAKXC,EALW,OAMHJ,IAAMF,SAAS,mBANZ,mBAMpBO,EANoB,KAMdC,EANc,KAUrBC,EAAmBP,IAAMQ,aAAY,WACzCvB,QAAQC,IAAI,2BACX,IAEGuB,EAAoBT,IAAMQ,aAAY,WAC1CvB,QAAQC,IAAI,4BACX,IAEGwB,EAA2BV,IAAMQ,aAAY,WAKjD,OAJAvB,QAAQC,IAAI,+BACZkB,GAAW,GACXE,EAAQ,uBAED,IAAIK,SAAQ,SAACC,GAClBV,EAA0BW,QAAUD,EAEpCE,YAAW,WACTV,GAAW,GACXE,EAAQ,sBACRM,MACC,UAEJ,CAACR,EAAYE,IAEVS,EAAsBf,IAAMQ,aAAY,WAC5C,OAAOT,EAAac,UACnB,CAACd,EAAac,UAEXG,EAAcC,0BAAgB,CAClCC,QAASH,EACTI,cAAe,kBACfC,mBAAoBV,EACpBW,cAAeZ,EACfa,aAAcf,EACdgB,kBAAkB,IAGpBvB,IAAMwB,WAAU,WAEH,uBAATnB,GAC6C,oBAAtCH,EAA0BW,SAEjCX,EAA0BW,YAE3B,CAACX,EAA0BW,QAASR,IAEvC,IAAIoB,EACF,4EACA9D,aAAaC,QAAQ,mBAoCvB,OAlCA4D,qBAAU,WACR,IAAIE,IAAOC,SAASC,eAAe,aAAc,CAC/CvB,KAAMwB,UAAUJ,GAChBK,MAAO,IACPC,OAAQ,IAERC,UAAW,wBACXC,WAAY,UACZC,qBAAsB,OACtBC,YAAa,GACbC,SAAU,GAEVC,aAAc,uBACdC,cAAe,UACfC,YAAa,KAGf,IAAIb,IAAOC,SAASC,eAAe,cAAe,CAChDvB,KAAMwB,UAAUJ,GAChBK,MAAO,IACPC,OAAQ,IAERC,UAAW,wBACXC,WAAY,UACZC,qBAAsB,OACtBC,YAAa,GACbC,SAAU,GAEVC,aAAc,uBACdC,cAAe,UACfC,YAAa,OAEd,IAGD,6BACE,kBAAC5C,EAAA,EAAD,CAAKP,UAAU,8BACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,eACb,kBAACO,EAAA,EAAD,CAAKP,UAAU,WACb,kBAACQ,EAAA,EAAD,KACE,wBAAIR,UAAU,aACXzB,aAAaC,QAAQ,qBAG1B,kBAACgC,EAAA,EAAD,CAAKR,UAAU,eACb,yBAAKD,GAAG,eAEV,kBAACS,EAAA,EAAD,KACE,yBACE4C,IAAI,+BACJpD,UAAU,qBAKlB,kBAACQ,EAAA,EAAD,CAAKR,UAAU,gBACb,kBAACO,EAAA,EAAD,CAAKP,UAAU,eACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACZ,IACD,yBAAKoD,IAAI,sBAAsBpD,UAAU,mBAE3C,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACb,yBAAKoD,IAAI,0BAA0BpD,UAAU,sBAKrD,yBAAKA,UAAU,WACb,yBAAKD,GAAG,YAAYsD,IAAK1C,GACvB,kBAACJ,EAAA,EAAD,CAAKP,UAAU,oBACb,kBAACQ,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,CAAKP,UAAU,WACb,kBAACQ,EAAA,EAAD,KACE,uBAAGR,UAAU,aACVzB,aAAaC,QAAQ,qBAG1B,kBAACgC,EAAA,EAAD,KACE,yBAAKT,GAAG,gBAEV,kBAACS,EAAA,EAAD,KACE,yBACE4C,IAAI,+BACJpD,UAAU,kBAKlB,kBAACQ,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,CAAKP,UAAU,YACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACZ,IACD,yBAAKoD,IAAI,sBAAsBpD,UAAU,gBAE3C,kBAACQ,EAAA,EAAD,CAAKR,UAAU,QACb,yBAAKoD,IAAI,0BAA0BpD,UAAU,mBAKpDe,GAAW,uBAAGf,UAAU,aAAb,oBAIhB,4BAAQsD,QAAS1B,EAAa5B,UAAU,gBAAxC,gC,IAmCS2D,E,kDAdb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEG,WAAW,GAFT,E,qDAMjB,OACE,kBAACrD,EAAA,EAAD,CAAKP,UAAU,UACb,kBAAC0D,EAAD,CAAc1D,UAAU,Y,GATL1C,a,iBCpLzBuG,IAASC,cAVU,CACjBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBR,IAASS,YACKT,IAASU,UCLzB,SAASC,IAAiB,IAAD,EACiB9D,mBAAS,IAD1B,mBACF+D,GADE,aAEK/D,mBAAS,IAFd,mBAEhBgE,EAFgB,KAERC,EAFQ,OAGGjE,mBAAS,IAHZ,gCAIOA,mBAAS,KAJhB,mBAIPkE,GAJO,aAKWlE,mBAAS,IALpB,mBAOjBmE,GAPiB,UAOF,WACnB,IAAMxG,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,SAEhD,mBAAoB,mBAQtBL,MAAM,2DALU,CACdC,OAAQ,MACRC,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACClF,QAAQC,IAAIiF,GACZJ,EAAUI,EAAeC,SAG3B,SAAChG,GACCa,QAAQC,IAAId,QAuEpB,OAJAoD,qBAAU,WACRyC,MACC,IAGD,kBAACrE,EAAA,EAAD,CAAKR,UAAU,YACb,wBAAIA,UAAU,SAAd,aACA,0BAAMC,SArEc,SAACgF,GACvBA,EAAE5F,iBACF,IAAM6F,EAAO,IAAIC,SAASF,EAAEG,QAEtB/G,EAAU,IAAIyG,QAAQ,CAC1B,mBAAoB,iBACpBxG,cAAe,UAAYC,aAAaC,QAAQ,WASlDL,MACE,qEAPc,CACdC,OAAQ,MACRK,KAAMyG,EACN7G,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACmG,GACCH,EAAWG,EAAe5F,SAC1B,IAAMd,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,SAEhD,mBAAoB,mBAQtBL,MACE,2DANc,CACdC,OAAQ,MACRC,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACCN,EAAgBM,EAAeC,MAC/BH,OAGF,SAAC7F,GACCa,QAAQC,IAAId,SAKpB,SAACA,GACCa,QAAQC,IAAId,OAYiBgB,UAAU,YACzC,yBACEA,UAAU,iBACVoD,IACE,mDAAqDsB,IAEzD,6BACA,6BACA,2BACEhF,KAAK,OACL2F,KAAK,OACLC,SAAU,SAACL,GACTR,EAAgBQ,EAAEG,OAAOG,MAAM,OAGnC,6BACA,4BAAQvF,UAAU,YAAYN,KAAK,UAAnC,a,IAihBO8F,E,kDAxgBb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAWRiC,WAAa,WACX,EAAKC,SAAS,CAAEC,MAAM,KAbL,EAenBC,YAAc,WACZ,EAAKF,SAAS,CAAEC,MAAM,KAhBL,EAkBnBE,gBAAkB,WAChB,OAAiC,IAA7B,EAAKpC,MAAMqC,OAAOC,OAElB,6BACE,4BACE/F,UAAU,iBACVgG,QAAQ,UACR1C,QAAS,WACP,EAAKE,MAAMyC,QAAQC,KAAK,iBAJ5B,oCAM6B,+BAM/B,6BACE,4BACElG,UAAU,iBACVgG,QAAQ,UACR1C,QAAS,WACP,EAAKE,MAAMyC,QAAQC,KAAK,iBAJ5B,uCAMmC,gCAzCxB,EA+CnBC,WAAa,WACX,OAA0B,GAAtB,EAAK1C,MAAM2C,QAEX,oCACE,4BACEpG,UAAU,SACVsD,QAAS,WACP,EAAKoC,SAAS,CAAEU,SAAS,MAH7B,YAKW,8BAEV,EAAKP,mBAKR,4BAAQ7F,UAAU,SAASsD,QAAS,EAAK+C,kBAAzC,2BA/Da,EAqEnBC,aAAe,WACb,GAA0B,GAAtB,EAAK7C,MAAM2C,QACb,OACE,4BACEpG,UAAU,SACVsD,QAAS,WACP,EAAKoC,SAAS,CAAEU,SAAS,IACzB,EAAKvB,iBAJT,YAxEa,EAmFnB0B,YAAc,SAAC1I,GACb,IAAIiI,EAAS,EAAKrC,MAAMqC,OACxBA,EAAOjI,EAAMuH,OAAOC,MAAQxH,EAAMuH,OAAOoB,MACzC,EAAKd,SAAS,CACZI,OAAQA,KAvFO,EA4FnBjB,aAAe,WACb,IAAMxG,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,SAEhD,mBAAoB,mBAQtBL,MAAM,2DALU,CACdC,OAAQ,MACRC,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACC,IAAM0B,EAAY1B,EAClB,EAAKW,SAAS,CAAEI,OAAQW,IAExBlI,aAAamI,QACX,kBACAhI,KAAKC,UAAUoG,EAAe4B,iBAEhC,EAAKjB,SAAS,CAAEkB,aAAc7B,EAAe8B,mBAC7C,EAAKnB,SAAS,CACZoB,gBAAiB/B,EAAegC,sBAElClH,QAAQC,SAGV,SAACd,GACCa,QAAQC,IAAId,OA7HD,EAiInBgI,eAAiB,WACf,IAAM3I,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MAAM,2DALU,CACdC,OAAQ,OACRC,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEI,OAAQf,OAG1B,SAAC/F,GACCa,QAAQC,IAAId,OArJD,EA2JnBiI,YAAc,WACZ,IAAM/B,EAAO,CACXyB,eAAgB,EAAKlD,MAAMqC,OAAOa,eAClCO,SAAU,EAAKzD,MAAMqC,OAAOoB,SAC5BC,OAAQ,EAAK1D,MAAMqC,OAAOqB,OAC1BC,KAAM,EAAK3D,MAAMqC,OAAOsB,KACxBC,MAAO,EAAK5D,MAAMqC,OAAOuB,MACzBC,cAAe,EAAK7D,MAAMqC,OAAOwB,cACjCC,MAAO,EAAK9D,MAAMqC,OAAOyB,MACzBV,iBAAkB,EAAKpD,MAAMmD,aAC7BG,oBAAqB,EAAKtD,MAAMqD,iBAG5BzI,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,MACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,gEACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEvG,QAAS4F,EAAe5F,UACxC,EAAKuG,SAAS,CAAEU,SAAS,IACzB,EAAKvB,kBAGP,SAAC7F,GACCa,QAAQC,IAAId,OApMD,EA0MnBwI,gBAAkB,SAACvC,GACjBA,EAAE5F,iBACF,IAAM6F,EAAO,IAAIC,SAASF,EAAEG,QAEtB/G,EAAU,IAAIyG,QAAQ,CAC1B,mBAAoB,iBACpBxG,cAAe,UAAYC,aAAaC,QAAQ,WASlDL,MACE,qEAPc,CACdC,OAAQ,MACRK,KAAMyG,EACN7G,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEvG,QAAS4F,EAAe5F,UACxC,EAAK0F,kBAGP,SAAC7F,GACCa,QAAQC,IAAId,OAxOD,EA6OnByI,eAAiB,SAACxC,GAChBA,EAAE5F,iBACF,IAAM6F,EAAO,CACXmC,MAAO,EAAK5D,MAAM4D,OAGdhJ,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,OACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,oEACE,EAAKsF,MAAM4D,MACX,eACA,EAAK5D,MAAMqC,OAAOuB,MACpBhK,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAAC8I,GACL,EAAKhC,SAAS,CAAEvG,QAASuI,EAAavI,cA3QzB,EA+QnBkH,iBAAmB,WACjB,EAAKY,eA9QL,EAAKxD,MAAQ,CACXqC,OAAQ,GACRM,SAAS,EACTT,MAAM,EACNgC,UAAU,EACVf,cAAc,EACdE,iBAAiB,GARF,E,gEAoRjBc,KAAK/C,eAELhF,QAAQC,IAAI,aAAc8H,KAAKnE,MAAMqD,iBACrCjH,QAAQC,IAAI,aAAc8H,KAAKnE,MAAMmD,gB,+BAG7B,IAAD,OACP,OACE,kBAACtG,EAAA,EAAD,CAAWN,UAAU,0BACnB,kBAACwE,EAAD,MACA,kBAACjE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqH,GAAI,GAAI7H,UAAU,eACrB,wBAAIA,UAAU,SAAd,qBACA,2BACG4H,KAAKnE,MAAM2C,QACV,wBAAIpG,UAAU,mBACX4H,KAAKnE,MAAMqC,OAAOa,gBAGrB,2BACEjH,KAAK,OACLoI,MAAOF,KAAKnE,MAAMqC,OAAOa,eACzBtB,KAAK,iBACLC,SAAUsC,KAAKrB,eAIrB,2BACGqB,KAAKnE,MAAM2C,QACV,0BAAMpG,UAAU,cACb4H,KAAKnE,MAAMqC,OAAOwB,eAGrB,2BACE5H,KAAK,OACL2F,KAAK,gBACL0C,YAAY,YACZzC,SAAUsC,KAAKrB,YACfuB,MAAOF,KAAKnE,MAAMqC,OAAOwB,iBAK/B,2BACGM,KAAKnE,MAAM2C,QACV,0BAAMpG,UAAU,cAAc4H,KAAKnE,MAAMqC,OAAOoB,UAEhD,2BACExH,KAAK,OACL2F,KAAK,WACL0C,YAAY,MACZzC,SAAUsC,KAAKrB,YACfuB,MAAOF,KAAKnE,MAAMqC,OAAOoB,YAI/B,2BACGU,KAAKnE,MAAM2C,QACV,0BAAMpG,UAAU,cAAc4H,KAAKnE,MAAMqC,OAAOqB,QAEhD,2BACEzH,KAAK,OACL2F,KAAK,SACL0C,YAAY,UACZzC,SAAUsC,KAAKrB,YACfuB,MAAOF,KAAKnE,MAAMqC,OAAOqB,UAI/B,2BACGS,KAAKnE,MAAM2C,QACV,0BAAMpG,UAAU,cAAc4H,KAAKnE,MAAMqC,OAAOsB,MAEhD,2BACE1H,KAAK,OACL2F,KAAK,OACL0C,YAAY,QACZzC,SAAUsC,KAAKrB,YACfuB,MAAOF,KAAKnE,MAAMqC,OAAOsB,QAI/B,2BACGQ,KAAKnE,MAAM2C,QACV,0BAAMpG,UAAU,cAAc4H,KAAKnE,MAAMqC,OAAOuB,OAEhD,2BACE3H,KAAK,OACL2F,KAAK,QACL0C,YAAY,QACZzC,SAAUsC,KAAKrB,YACfuB,MAAOF,KAAKnE,MAAMqC,OAAOuB,SAI/B,2BACGO,KAAKnE,MAAM2C,QACV,0BAAMpG,UAAU,cAAc4H,KAAKnE,MAAMqC,OAAOyB,OAEhD,2BACE7H,KAAK,OACLoI,MAAOF,KAAKnE,MAAMqC,OAAOyB,MACzBQ,YAAY,kBACZ1C,KAAK,QACLC,SAAUsC,KAAKrB,eAIpBqB,KAAKnE,MAAM2C,QACV,6BACE,0BAAMpG,UAAU,cACb4H,KAAKnE,MAAMqC,OAAOe,iBACf,sCACA,qCAEN,6BACA,0BAAM7G,UAAU,cACb4H,KAAKnE,MAAMqC,OAAOiB,oBACf,mCACA,mCAIR,6BACE,6BACE,2BACE/G,UAAU,cACVN,KAAK,WACLK,GAAG,aACHsF,KAAK,aACL2C,QAASJ,KAAKnE,MAAMqD,gBACpBxB,SAAU,WACR,EAAKI,SAAS,CACZoB,iBAAkB,EAAKrD,MAAMqD,qBAInC,2BAAOmB,IAAI,cAAX,yBAEF,6BACE,2BACEjI,UAAU,cACVN,KAAK,WACLK,GAAG,UACHsF,KAAK,UACL2C,QAASJ,KAAKnE,MAAMmD,aACpBtB,SAAU,WACR,EAAKI,SAAS,CAAEkB,cAAe,EAAKnD,MAAMmD,kBAG9C,2BAAO5G,UAAU,cAAciI,IAAI,WAAnC,6BAOLL,KAAKzB,aAELyB,KAAKtB,gBAER,kBAAC/F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,UAAU,iBACb,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqH,GAAI,IACP,2BAAO7H,UAAU,qBAAjB,6CAKJ,kBAACO,EAAA,EAAD,CAAKP,UAAU,cACb,kBAACQ,EAAA,EAAD,KACE,2BACEd,KAAK,OACL2F,KAAK,QACLC,SAAUsC,KAAKrB,YACfwB,YAAY,uBACZ/H,UAAU,qBAGd,kBAACQ,EAAA,EAAD,KACE,2BACEd,KAAK,SACL8G,MAAM,UACNlD,QAASsE,KAAKH,eACdzH,UAAU,qBAEZ,uBAAGA,UAAU,kBAAb,uKASR,kBAACQ,EAAA,EAAD,CAAKR,UAAU,+BACb,wBAAIA,UAAU,SAAd,iBACA,kBAACO,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAK0H,GAAI,EAAGL,GAAI,GACd,8CACA,uBAAG7H,UAAU,SAAb,8EAKA,kBAAC,EAAD,CACEA,UAAU,eACV2G,eAAgBiB,KAAKnE,MAAMqC,OAAOa,mBAIxC,kBAACpG,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAK0H,GAAI,EAAGL,GAAI,GACd,uBAAG7H,UAAU,MAAb,mBACA,uBAAGA,UAAU,SAAb,8DAIA,kBAAC,EAAD,CACEA,UAAU,SACV2G,eAAgBiB,KAAKnE,MAAMqC,OAAOa,mBAKxC,6BACA,kBAACwB,EAAA,EAAD,CACE7E,QAAS,WACPrE,OAAOmJ,QAAQ,qCAEf,EAAK5E,MAAM6E,UAAS,GACpB,EAAK7E,MAAMyC,QAAQC,KAAK,MAE1BlG,UAAU,mBAPZ,yB,GAxfS1C,a,yCCsBNgL,E,kDAjJb,WAAY9E,GAAQ,IAAD,8BACjB,cAAMA,IAGR+C,YAAc,SAACtB,GACb,EAAKS,SAAL,eAAiBT,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOoB,SALzB,EAOnB+B,SAAW,SAACtD,GACVA,EAAE5F,iBACF,IAAM6F,EAAO,CACXmC,MAAO,EAAK5D,MAAM4D,MAClBmB,SAAU,EAAK/E,MAAM+E,UAGjBnK,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,mBAGhBzH,EAAU,CACde,OAAQ,OACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MAAM,0DAA2Dd,GAC9DuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAAC8I,GACL,EAAKhC,SAAS,CAAEvG,QAASuI,EAAavI,UAElCuI,EAAae,QACflK,aAAamI,QAAQ,QAASgB,EAAae,OAC3ClK,aAAamI,QAAQ,SAAUgB,EAAagB,QAC5C,EAAKlF,MAAM6E,UAAS,GACpB,EAAK7E,MAAMyC,QAAQC,KAAK,kBAnC9B,EAAKzC,MAAQ,CAAE4D,MAAO,GAAIlI,QAAS,IAFlB,E,qDA0CjB,OACE,kBAACmB,EAAA,EAAD,CAAWN,UAAU,uBACnB,kBAAC,IAAD,aACE2I,SAAS,MACTC,WAAW,YACXC,kBAAkB,YAClBC,QAAS,GACTC,qBAAmB,EACnBC,UAAW,WACT9J,MACE,2GAGJ+J,WAAW,cACXrM,MAAO,CAAEsM,WAAY,UAAWpM,MAAO,QACvCqM,mBAAoB,CAClBC,aAAc,GACdC,QAAS,EACTvM,MAAO,OACPG,SAAU,OACViM,WAAY,UACZI,WAAY,QAEdC,YAAa,CACXH,aAAc,GACdC,QAAS,EACTvM,MAAO,OACPG,SAAU,OACViM,WAAY,UACZI,WAAY,SA3BhB,QA6BS,CACLrM,SAAU,OACVuM,WAAY,aACZF,WAAY,SAhChB,iTAuCQ,IACN,uBACEG,KAAK,oCACLrE,OAAO,SACPxI,MAAO,CACLK,SAAU,OACVuM,WAAY,aACZF,WAAY,SANhB,yBAYF,kBAAC/I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,iDACA,kDAGJ,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,QAAN,CACExE,KAAK,QACL3F,KAAK,QACLoK,UAAU,WACV/B,YAAY,eACZhI,GAAG,QACHuF,SAAUsC,KAAKrB,YACfC,MAAOoB,KAAKnE,MAAM4D,QAEpB,kBAACqC,EAAA,EAAKG,QAAN,CACExE,KAAK,WACL3F,KAAK,WACLoK,UAAU,WACV/B,YAAY,qBACZhI,GAAG,WACHuF,SAAUsC,KAAKrB,YACfC,MAAOoB,KAAKnE,MAAM+E,YAGtB,kBAAChI,EAAA,EAAD,CAAKR,UAAU,SAASkI,GAAI,GAAIL,GAAI,IAClC,kBAAC,IAAD,CAAM7H,UAAU,YAAY+J,GAAG,kBAC7B,yDAGJ,kBAACvJ,EAAA,EAAD,CAAKqH,GAAI,GAAI7H,UAAU,cACrB,kBAACmI,EAAA,EAAD,CAAQnI,UAAU,gBAAgBsD,QAASsE,KAAKW,UAAhD,gBAGA,2BAAIX,KAAKnE,MAAMtE,UAEjB,kBAACqB,EAAA,EAAD,CAAKR,UAAU,cACb,kBAAC0J,EAAA,EAAKM,MAAN,CAAYhK,UAAU,SAAtB,sBACsB,IACpB,kBAAC,IAAD,CAAMA,UAAU,cAAc+J,GAAG,gBAAjC,8B,GAzIYzM,a,gBC2OT2M,G,OC5OS3M,Y,yDDDtB,WAAYkG,GAAQ,IAAD,8BACjB,cAAMA,IAOR+C,YAAc,SAACtB,GACb,EAAKS,SAAL,eAAiBT,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOoB,SATzB,EAYnB0D,eAAiB,SAACjF,GAChBA,EAAE5F,iBAEF,IAAM6F,EAAO,IAAIC,SAASF,EAAEG,QAEtB/G,EAAU,IAAIyG,QAAQ,CAC1B,mBAAoB,mBAStB3G,MACE,gEAPc,CACdC,OAAQ,OACRK,KAAMyG,EACN7G,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEvG,QAAS4F,EAAe5F,aAG1C,SAACH,GACCa,QAAQC,IAAId,OAvClB,EAAKyE,MAAQ,CACXkD,eAAgB,GAChBwD,YAAY,EACZC,UAAU,GALK,E,qDA6CT,IAAD,EACP,OACE,kBAAC9J,EAAA,EAAD,CAAWN,UAAU,kBACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,UAAU,WAAW6H,GAAI,GAC5B,kBAACtH,EAAA,EAAD,CAAKP,UAAU,SACb,iEAEF,kBAACO,EAAA,EAAD,KACE,2HAKF,kBAACA,EAAA,EAAD,KACE,kBAACmJ,EAAA,EAAD,CAAM1J,UAAU,OAAOC,SAAU2H,KAAKsC,gBACpC,kBAAC3J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,WACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,oBACZ1C,KAAK,iBACLC,SAAUsC,KAAKrB,iBAKvB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,OACZ1C,KAAK,WACLC,SAAUsC,KAAKrB,gBAIrB,kBAAC/F,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,YACZ1C,KAAK,gBACLC,SAAUsC,KAAKrB,iBAKvB,kBAACmD,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,UACZ1C,KAAK,SACLC,SAAUsC,KAAKrB,eAGnB,kBAACmD,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,QACZ1C,KAAK,OACLC,SAAUsC,KAAKrB,eAGnB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,kBACZ1C,KAAK,QACLC,SAAUsC,KAAKrB,gBAIrB,kBAAC/F,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,WACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,SACZ1C,KAAK,QACLC,SAAUsC,KAAKrB,iBAKvB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0H,GAAI,GACP,kBAACwB,EAAA,EAAKC,MAAN,CACE3J,UAAU,iBACV4J,UAAU,eACV,kBAACF,EAAA,EAAKM,MAAN,CAAYJ,UAAU,eAAtB,wBAGA,kBAACF,EAAA,EAAKW,MAAN,CACE3K,KAAK,WACL2F,KAAK,OACLiF,MAAM,OACNhF,SAAUsC,KAAKrB,gBAIrB,kBAAC/F,EAAA,EAAD,CAAK0H,GAAI,GACP,kBAACwB,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,2BACElK,KAAK,WACLK,GAAG,aACHsF,KAAK,QACL2C,QAASJ,KAAKnE,MAAMqD,gBACpBxB,SAAUsC,KAAKrB,cAEjB,2BAAO0B,IAAI,cAAX,wBACA,6BACA,2BACEvI,KAAK,WACLK,GAAG,UACHsF,KAAK,YACL2C,QAASJ,KAAKnE,MAAMmD,aACpBtB,SAAUsC,KAAKrB,cAEjB,2BAAO0B,IAAI,WAAX,8BAIN,kBAACyB,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKM,MAAN,oBAEE,uBAAGhK,UAAU,kBAAb,qGAKF,kBAAC0J,EAAA,EAAKG,QAAN,CACEnK,KAAK,WACLqI,YAAY,eACZ1C,KAAK,WACLC,SAAUsC,KAAKrB,eAGnB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqH,GAAI,GACP,kBAAC6B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,6BACA,kBAACF,EAAA,EAAKW,MAAN,CACErK,UAAU,cACVN,KAAK,WACL2F,KAAK,gBACLiF,MAAM,sCACNhF,SAAUsC,KAAKrB,YACfgE,UAAQ,IAEV,kBAAChK,EAAA,EAAD,CAAK3D,MAAO,CAAE4N,WAAY,OAAQlB,WAAY,SAC5C,uBACEtJ,UAAU,UACVyJ,KAAK,sBACLrE,OAAO,WAHT,UASN,kBAAC5E,EAAA,EAAD,CAAKqH,GAAI,GACP,kBAACM,EAAA,GAAD,GACEnI,UAAU,qBACVyK,OAAK,EACL/K,KAAK,UAHP,+CAKO,UALP,kBASF,uBAAGM,UAAU,WAAb,0cAWJ,kBAACQ,EAAA,EAAD,CAAKqH,GAAI,CAAE6C,KAAM,EAAGC,OAAQ,IAAM/C,KAAKnE,MAAMtE,iB,GAtOjC7B,c,eEA1B,SAASsN,IAAc,IAAD,EACoBlK,mBAAS,IAD7B,mBACC+D,GADD,aAEQ/D,mBAAS,IAFjB,mBAEbgE,EAFa,KAELC,EAFK,OAGMjE,mBAAS,IAHf,mBAGb4J,EAHa,KAGNO,EAHM,OAIUnK,mBAAS,IAJnB,mBAIJkE,GAJI,aAKclE,mBAAS,IALvB,mBAKboK,EALa,KAKFC,EALE,KAedC,EAAe,WACnB,IAAM3M,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MAAM,yDALU,CACdC,OAAQ,MACRC,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACsG,GACCP,EAAUO,EAAK+F,KAAKH,UAAUI,SAC9BL,EAAS3F,EAAK+F,KAAKH,UAAUR,OAC7BS,EAAa7F,EAAK+F,MAClBpL,QAAQC,IAAI,QAASoF,EAAK+F,KAAKH,UAAUI,SACzCrL,QAAQC,IAAI,QAAS4E,MAEvB,SAACyG,GACCtL,QAAQC,IAAIqL,OA0CpB,OAJA/I,qBAAU,WACR4I,MACC,IAGD,kBAAC1K,EAAA,EAAD,CAAWN,UAAU,oBACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqH,GAAI,CAAE6C,KAAM,EAAGC,OAAQ,IAC1B,kBAAC,IAAD,CAAM3K,UAAU,aAAa+J,GAAG,UAC9B,wBAAI/J,UAAU,YAAd,kBAGJ,kBAACQ,EAAA,EAAD,CAAKR,UAAU,UAAU6H,GAAI,IAC3B,0BACE7H,UAAU,WACVC,SAAU,SAACgF,GACTA,EAAE5F,iBAEF,IAAM6F,EAAO,IAAIC,SAASF,EAAEG,QAEtB/G,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WASlDL,MACE,kEAPc,CACdC,OAAQ,MACRK,KAAMyG,EACN7G,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAAC8I,GACC9C,EAAW8C,EAAavI,SAExB,IAAMd,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MACE,yDANc,CACdC,OAAQ,MACRC,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACsG,GACCT,EAAgBS,EAAK+F,KAAKH,UAAUI,SACpCL,EAAS3F,EAAK+F,KAAKH,UAAUR,OAC7BS,EAAa7F,EAAK+F,SAEpB,SAACE,GACCtL,QAAQC,IAAIqL,MAGlBH,OAEF,SAACG,GACCtL,QAAQC,IAAIqL,QAKpB,2BACEnL,UAAU,SACVN,KAAK,OACL2F,KAAK,OACLC,SAAU,SAACL,GACTR,EAAgBQ,EAAEG,OAAOG,MAAM,OAGnC,4BAAQvF,UAAU,SAASN,KAAK,UAAhC,YAKF,kBAAC0L,EAAA,EAAKC,KAAN,CAAWrL,UAAU,YACnB,2BAAIsK,GAEJ,kBAACc,EAAA,EAAKE,IAAN,CACEtF,QAAQ,MACR5C,IAAK,mDAAqDsB,EAC1D1E,UAAU,YACVuL,IAAI,iBAGN,4BACEvL,UAAU,kBACVN,KAAK,SACL4D,QAAS,kBAvIF,SAAC2B,GAClBhG,OAAOmJ,QAAQ,wDACfnD,EAAE5F,iBACF,IAAM6F,EAAO,CACX4F,UAAWA,GAEPzM,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,SACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,qEACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAAC8I,GACC9C,EAAW8C,EAAavI,SACxB6L,OAEF,SAACG,GACCtL,QAAQC,IAAIqL,MA0GOK,KAHjB,yB,IA2BGC,E,kDAZb,WAAYjI,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,kGAQjB,OAAO,kBAACmH,EAAD,U,GATatN,a,mCCgFToO,G,gEA9Qb,WAAYlI,GAAQ,IAAD,8BACjB,cAAMA,IAGRmI,cAAgB,WACd,IAAMtN,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MACE,2EANc,CACdC,OAAQ,MACRC,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACsG,GACCrF,QAAQC,IAAI,OAAQoF,GACpB,EAAKQ,SAAS,CAAEkG,QAAS1G,OAE3B,SAACiG,GACCtL,QAAQC,IAAIqL,OA3BD,EAgCnBU,kBAAoB,WAClB,OAAO,EAAKpI,MAAMmI,QAAQE,WAAWC,KAAI,SAACC,GACxC,OACE,yBAAKhM,UAAU,cACb,uBAAGA,UAAU,YAAYgM,EAAQC,aACjC,uBAAGjM,UAAU,YAAYgM,EAAQE,iBACjC,kBAACC,EAAA,EAAD,CACEnM,UAAU,gBACVoD,IACE,mDACA4I,EAAQI,eAEVC,eAAa,IAEf,6BACA,4BACErM,UAAU,SACVsD,QAAS,WACP,IAAM4B,EAAO,CACXoH,KAAMN,EAAQO,aAQVlP,EAAU,CACde,OAAQ,SACRC,QAPc,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChBxG,cAAe,UAAYC,aAAaC,QAAQ,WAMhDC,KAAMC,KAAKC,UAAUuG,IAGvB/G,MACE,6EACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACsG,GACC,EAAKyG,mBAGP,SAACR,GACCtL,QAAQC,IAAIqL,QAhCtB,kBA/CW,EAyFnB5E,YAAc,SAACtB,GACb,EAAKS,SAAL,eAAiBT,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOoB,SA1FzB,EA6FnBgG,eAAiB,SAACvH,GAChBA,EAAE5F,iBACF,IAAM6F,EAAO,CACXmC,MAAO,EAAK5D,MAAM4D,OAGdhJ,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,OACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,2EACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAAC8I,IACgB,IAAjBA,EACFxI,MAAM,kDAENA,MAAMwI,EAAa+E,WA3HR,EA+HnBC,YAAc,SAACzH,GACbA,EAAE5F,iBACF,IAAM6F,EAAO,CACXmC,MAAO,EAAK5D,MAAM4D,OAGdhJ,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,OACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,wEACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAAC8I,GACL,EAAKhC,SAAS,CAAEvG,QAASuI,EAAavI,cA1JzB,EAiKnBwN,KAAO,WACL,OAAK,EAAKlJ,MAAMmI,QAMZ,kBAACpL,EAAA,EAAD,CAAKR,UAAU,aACb,kBAAC,IAAD,CACE4M,cAAe,EACfC,gBAAiB,EACjBC,eAAa,EACbC,UAAQ,EACRC,UAAU,EACVC,YAAa,CACXC,IAAM,CAEJN,cAAe,EACfE,eAAe,EACfC,UAAU,GAEZI,IAAK,CACHP,cAAe,EACfC,gBAAiB,EACjBC,eAAe,EACfC,UAAU,EAEVK,eAAgB,IAChBJ,UAAU,KAGb,EAAKnB,sBA5BV,uBAAG7L,UAAU,eAAb,4CAlKJ,EAAKyD,MAAQ,CAAEmI,QAAS,CAAEE,WAAY,IAAMzE,MAAO,IAFlC,E,gEA8JjBO,KAAK+D,kB,+BAyCL,OACE,kBAACrL,EAAA,EAAD,CAAWN,UAAU,uBACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMR,UAAU,aAAa+J,GAAG,WAC9B,wBAAI/J,UAAU,mBAAd,+BAIN,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,UAAU,kBACb,kBAACQ,EAAA,EAAD,CAAKqH,GAAI,IACP,2BAAO7H,UAAU,sBAAjB,0BAIF,2BACEN,KAAK,OACL2F,KAAK,QACLC,SAAUsC,KAAKrB,YACfwB,YAAY,mBACZ/H,UAAU,cAGZ,2BACEN,KAAK,SACL8G,MAAM,UACNlD,QAASsE,KAAK4E,eACdxM,UAAU,WAEZ,uBAAGA,UAAU,YAAb,wJAKC4H,KAAKnE,MAAM4J,YACZ,kBAAC7M,EAAA,EAAD,CAAKqH,GAAI,IACP,2BAAO7H,UAAU,sBAAjB,mEAIF,2BACEN,KAAK,OACL2F,KAAK,QACLC,SAAUsC,KAAKrB,YACfwB,YAAY,mBACZ/H,UAAU,cAGZ,2BACEN,KAAK,SACL8G,MAAM,UACNlD,QAASsE,KAAK8E,YACd1M,UAAU,WAEZ,uBAAGA,UAAU,YAAb,uKAKA,6BACC4H,KAAKnE,MAAMtE,UAGhB,wBAAIa,UAAU,eAAd,kBACC4H,KAAK+E,Y,GAzQUrP,c,gBCGxB,SAASgQ,KAAQ,IAAD,EACU5M,oBAAS,GADnB,mBACPiF,EADO,KACD4H,EADC,KAER3H,EAAc,kBAAM2H,GAAQ,IAC5B9H,EAAa,kBAAM8H,GAAQ,IAEjC,OACE,oCACE,kBAACpF,EAAA,EAAD,CAAQnI,UAAU,aAAasD,QAASmC,GAAxC,sBACsB,IACpB,kBAAC0C,EAAA,EAAD,CAAQ7E,QAASmC,EAAYzF,UAAU,cACpC,MAIL,kBAACwN,EAAA,EAAD,CACE7H,KAAMA,EACN8H,OAAQ7H,EACR8H,WAAW,EACXC,SAAS,SACTC,UAAU,GACV,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,8BAEF,kBAACP,EAAA,EAAMnC,KAAP,KACE,uBAAGrL,UAAU,UAAb,2EAGE,6BAHF,gBAKA,uBAAGA,UAAU,SAAb,uEAEE,6BAFF,IAES,6BAFT,mBAIE,6BAJF,0EAME,6BANF,QAQE,6BARF,0CAUE,6BAVF,+DAYE,6BAZF,IAYS,6BAZT,uBAcE,6BAdF,8CAe6C,8BAE7C,uBAAGA,UAAU,UAAb,gFAGE,6BAHF,gBAKA,uBAAGA,UAAU,SAAb,2KAIE,6BAJF,IAIS,6BAJT,2IAOE,6BAPF,IAOS,6BAPT,0OAYE,+BAGJ,kBAACwN,EAAA,EAAMQ,OAAP,KACE,kBAAC7F,EAAA,EAAD,CACEnI,UAAU,cACVgG,QAAQ,YACR1C,QAASsC,GAHX,a,IA8KKqI,G,kDAjKb,WAAYzK,GAAQ,IAAD,8BACjB,cAAMA,IAIRrC,iBAAmB,WACjBtB,QAAQC,IAAI,0BANK,EASnBuB,kBAAoB,WAClBxB,QAAQC,IAAI,2BAVK,EAanBwB,yBAA2B,WAIzB,OAHAzB,QAAQC,IAAI,+BACZ,EAAK4F,SAAS,CAAEzE,KAAM,sBAAuB2C,WAAW,IAEjD,IAAIrC,SAAQ,SAACC,GAClBE,YAAW,WACT,EAAKgE,SACH,CAAEzE,KAAM,qBAAsB2C,WAAW,GACzCpC,KAED,SAvBY,EA2BnB0M,oBAAsB,WAQpB,OAAO,2CAnCU,EAsCnBC,kBAAoB,WAClB,IAAM9P,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,SAEhD,mBAAoB,mBAQtBL,MAAM,2DALU,CACdC,OAAQ,MACRC,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACCxG,aAAamI,QACX,kBACAhI,KAAKC,UAAUoG,EAAe4B,iBAEhC,EAAKjB,SAAS,CAAEiB,eAAgB5B,EAAe4B,iBAC/C,EAAKjB,SAAS,CAAEK,OAAQhB,EAAegB,SACvClG,QAAQC,IACN,aACApB,KAAK0P,MAAM7P,aAAaC,QAAQ,wBAIpC,SAACQ,GACCa,QAAQC,IAAId,OArED,EAyEnB6G,gBAAkB,WAChB,OAA0B,IAAtB,EAAKpC,MAAMsC,OAEX,6BACE,4BACE/F,UAAU,gBACVgG,QAAQ,UACR1C,QAAS,WACP,EAAKE,MAAMyC,QAAQC,KAAK,iBAJ5B,oCAM6B,+BAM/B,6BACE,4BACElG,UAAU,gBACVgG,QAAQ,UACR1C,QAAS,WACP,EAAKE,MAAMyC,QAAQC,KAAK,iBAJ5B,uCAMmC,gCA9FzC,EAAKzC,MAAQ,CAAEkD,eAAgB,GAAI/C,WAAW,GAF7B,E,gEAwGjBgE,KAAKuG,sB,+BAIL,OACE,yBAAKnO,UAAU,YACb,kBAACO,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAKqH,GAAI,IACP,kBAAC,EAAD,CAAW7H,UAAU,cACrB,yBAAKA,UAAU,WAAW4H,KAAK/B,mBAC/B,wBAAI7F,UAAU,WAAd,gBAEA,kBAACO,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAKqH,GAAI,CAAE6C,KAAM,EAAGC,OAAQ,GAAK3K,UAAU,WACzC,kBAACsN,GAAD,OAEF,kBAAC/M,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAK0H,GAAI,GAAImG,EAAG,GAAIxG,GAAI,GACtB,uBAAG7H,UAAU,WAAb,mBACA,uBAAGA,UAAU,SAAb,8EAIA,6BACE,kBAAC,EAAD,CACEA,UAAU,eACV2G,eAAgBiB,KAAKnE,MAAMkD,oBAKnC,kBAACpG,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAK0H,GAAI,GAAImG,EAAG,GAAIxG,GAAI,GACtB,uBAAG7H,UAAU,WAAb,kBACA,uBAAGA,UAAU,SAAb,8DAGA,kBAAC,EAAD,CACEA,UAAU,SACV2G,eAAgBiB,KAAKnE,MAAMkD,eAC3B2H,WAAW,eAMrB,kBAAC/N,EAAA,EAAD,CAAKP,UAAU,aACb,kBAACQ,EAAA,EAAD,CAAKqH,GAAI,GACP,kBAAC,EAAD,CAAW7H,UAAU,qB,GAzJZ1C,a,SCoFRiR,I,yDAlKb,WAAY/K,GAAQ,IAAD,8BACjB,cAAMA,IAMRgL,aAAe,WACb,IAAMnQ,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MAAM,yDALU,CACdC,OAAQ,MACRC,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACsG,GACC,EAAKQ,SAAS,CAAEuF,KAAM/F,EAAK+F,UAE7B,SAACE,GACCtL,QAAQC,IAAIqL,OA1BD,EAmCnBsD,OAAS,WACP,OAAI,EAAKhL,MAAMwH,KAAKyD,WAAa,EAAKjL,MAAMwH,KAAKyD,UAAUC,OAEvD,6BACE,kBAACC,GAAA,EAAD,KAAW,EAAKC,YAIb,sEA3CQ,EA+CnB5O,SAAW,SAACgF,GACVA,EAAE5F,iBAEF,IAAM6F,EAAO,IAAIC,SAASF,EAAEG,QAEtB/G,EAAU,IAAIyG,QAAQ,CAC1BxG,cAAe,UAAYC,aAAaC,QAAQ,WASlDL,MAAM,6DANU,CACdC,OAAQ,OACRK,KAAMyG,EACN7G,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAAC8I,GACC,EAAKhC,SAAS,CAAEvG,QAASuI,EAAavI,UACtC,EAAKqP,kBAEP,SAACrD,GACCtL,QAAQC,IAAIqL,OAxED,EA6EnBK,WAAa,SAACvG,EAAG6J,GACf7J,EAAE5F,iBACF,IAAM6F,EAAO,CAAEgG,QAAS,EAAKzH,MAAMwH,KAAKyD,UAAUI,GAAO5D,SAEnD7M,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChBxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,SACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,gEACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAAC8I,GACC,EAAKhC,SAAS,CAAEvG,QAASuI,EAAavI,UACtC,EAAKqP,kBAEP,SAACrD,GACCtL,QAAQC,IAAIqL,OAzGD,EA8GnB0D,QAAU,WACR,IAAIE,EAAiB,GAqBrB,OApBA,EAAKtL,MAAMwH,KAAKyD,UAAU3C,KAAI,SAACC,EAAS8C,GACtCC,EAAe7I,KACb,kBAAC0I,GAAA,EAASI,KAAV,KACE,kBAAC5D,EAAA,EAAD,CAAMxO,MAAO,CAAE8F,MAAO,SACpB,kBAAC0I,EAAA,EAAKE,IAAN,CACEtF,QAAQ,MACR5C,IAAK,wCAA0C4I,EAAQd,UAEzD,kBAACE,EAAA,EAAKC,KAAN,KACE,kBAAClD,EAAA,EAAD,CACE7E,QAAS,SAAC2B,GAAD,OAAO,EAAKuG,WAAWvG,EAAG6J,IACnC9O,UAAU,iBAFZ,4BAWH+O,GAjIP,EAAKtL,MAAQ,CACXwH,KAAM,CAAEyD,UAAW,KAJJ,E,gEAgCjB9G,KAAK4G,iB,+BAwGL,OACE,kBAAClO,EAAA,EAAD,CAAWN,UAAU,eACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqH,GAAI,CAAE6C,KAAM,EAAGC,OAAQ,GAAK3K,UAAU,QACzC,0CAEF,kBAACQ,EAAA,EAAD,CAAKR,UAAU,YAAY6H,GAAI,IAC7B,0BAAM5H,SAAU2H,KAAK3H,UACnB,2BACEP,KAAK,OACL2F,KAAK,OACL4J,UAAQ,EACRC,OAAO,qCAET,kBAAC/G,EAAA,EAAD,CAAQnI,UAAU,aAAaN,KAAK,UAApC,YAIDkI,KAAK6G,gB,GA3JMnR,cCgBT6R,I,8KAfX,OACE,yBAAKnP,UAAU,SACb,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,OAEF,kBAACA,EAAA,EAAD,CAAKqH,GAAI,GAAIuH,GAAI,IACf,kBAAC,GAAD,a,GATO9R,cC4FJ+R,I,yDA3Fb,WAAY7L,GAAQ,IAAD,8BACjB,cAAMA,IAQR+C,YAAc,SAACtB,GACb,EAAKS,SAAL,eAAiBT,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOoB,SAVzB,EAanB8I,cAAgB,SAACrK,GAGf,GAFAA,EAAE5F,iBAEG,EAAKoE,MAAM4D,OAAU,EAAK5D,MAAM+E,SAArC,CAIA,IAAMtD,EAAO,CACXmC,MAAO,EAAK5D,MAAM4D,MAClBmB,SAAU,EAAK/E,MAAM+E,SACrBC,MAAO,EAAKjF,MAAM+L,MAAMC,OAAO/G,OAO3BpL,EAAU,CACde,OAAQ,OACRC,QANc,IAAIyG,QAAQ,CAC1B,eAAgB,qBAMhBrG,KAAMC,KAAKC,UAAUuG,IAGvB/G,MACE,mEACAd,GAECuB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEvG,QAAS4F,EAAe5F,aAE1C,SAACH,GACCa,QAAQC,IAAId,QA5ClB,EAAKyE,MAAQ,CACX4D,MAAO,GACPmB,SAAU,GACVrJ,QAAS,IALM,E,qDAoDjB,OACE,kBAACmB,EAAA,EAAD,CAAWN,UAAU,aACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,UAAU,eAAe6H,GAAI,IAChC,wBAAI7H,UAAU,WAAd,+BACA,0BAAMA,UAAU,YAAYC,SAAU2H,KAAK0H,eACzC,2BACEtP,UAAU,aACVN,KAAK,QACLK,GAAG,QACHsF,KAAK,QACLC,SAAUsC,KAAKrB,YACfwB,YAAY,UAGd,6BAEA,2BACE/H,UAAU,aACVN,KAAK,WACLK,GAAG,WACHsF,KAAK,WACLC,SAAUsC,KAAKrB,YACfwB,YAAY,yBAEd,6BACA,kBAACI,EAAA,EAAD,CAAQ7E,QAASsE,KAAK0H,cAAetP,UAAU,eAA/C,YAKF,2BAAI4H,KAAKnE,MAAMtE,gB,GApFC7B,cCmFbmS,I,yDAlFb,WAAYjM,GAAQ,IAAD,8BACjB,cAAMA,IAOR+C,YAAc,SAACtB,GACb,EAAKS,SAAL,eAAiBT,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOoB,SATzB,EAYnBkJ,cAAgB,SAACzK,GAGf,GAFAA,EAAE5F,iBAEG,EAAKoE,MAAM4D,MAAhB,CAIA,IAAMnC,EAAO,CACXmC,MAAO,EAAK5D,MAAM4D,OAOdhK,EAAU,CACde,OAAQ,OACRC,QANc,IAAIyG,QAAQ,CAC1B,eAAgB,qBAMhBrG,KAAMC,KAAKC,UAAUuG,IAGvB/G,MACE,mEACAd,GAECuB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEvG,QAAS4F,EAAe5F,aAE1C,SAACH,GACCa,QAAQC,IAAId,QAzClB,EAAKyE,MAAQ,CACX4D,MAAO,GACPlI,QAAS,IAJM,E,qDAiDjB,OACE,kBAACmB,EAAA,EAAD,CAAWN,UAAU,iBACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,UAAU,eAAe6H,GAAI,IAChC,yBAAK7H,UAAU,gBACb,wBAAIA,UAAU,UAAd,+BACA,wBAAIA,UAAU,oBAAd,2CACwC,KAExC,0BAAMA,UAAU,YAAYC,SAAU2H,KAAK8H,eACzC,2BACE1P,UAAU,aACVN,KAAK,QACLK,GAAG,QACHsF,KAAK,QACLC,SAAUsC,KAAKrB,YACfwB,YAAY,aAKpB,kBAACvH,EAAA,EAAD,CAAKR,UAAU,cAAc6H,GAAI,IAC/B,kBAACM,EAAA,EAAD,CAAQ7E,QAASsE,KAAK8H,cAAe1P,UAAU,eAA/C,aAGA,2BAAI4H,KAAKnE,MAAMtE,gB,GA3EC7B,cCyPbqS,I,yDAtPb,WAAYnM,GAAQ,IAAD,8BACjB,cAAMA,IAKR+C,YAAc,SAACtB,GACb,EAAKS,SAAL,eAAiBT,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOoB,SAPzB,EASnB0D,eAAiB,SAACjF,GAChBA,EAAE5F,iBACF,IAAM6F,EAAO,CACX0K,UAAW,EAAKnM,MAAMmM,UACtBC,SAAU,EAAKpM,MAAMoM,SACrBzI,KAAM,EAAK3D,MAAM2D,KACjBD,OAAQ,EAAK1D,MAAM0D,OACnBR,eAAgB,EAAKlD,MAAMkD,eAC3BW,cAAe,EAAK7D,MAAM6D,cAC1BJ,SAAU,EAAKzD,MAAMyD,SACrB4I,KAAM,EAAKrM,MAAMqM,KACjBC,QAAS,EAAKtM,MAAMsM,QACpBlJ,iBAAkB,EAAKpD,MAAMoD,iBAC7BE,oBAAqB,EAAKtD,MAAMsD,oBAChCiJ,KAAM,EAAKvM,MAAMuM,KACjB3I,MAAO,EAAK5D,MAAM4D,MAClBE,MAAO,EAAK9D,MAAM8D,MAClBiB,SAAU,EAAK/E,MAAM+E,UAEjBnK,EAAU,IAAIyG,QAAQ,CAC1B,mBAAoB,iBACpB,eAAgB,qBASlB3G,MACE,uEAPc,CACdC,OAAQ,OACRK,KAAMyG,EACN7G,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACmG,GACC,EAAKW,SAAS,CAAEvG,QAAS4F,EAAe5F,aAG1C,SAACH,GACCa,QAAQC,IAAId,OAnDlB,EAAKyE,MAAQ,CACXkD,eAAgB,IAHD,E,qDA0DjB,OACE,kBAACrG,EAAA,EAAD,CAAWN,UAAU,kBACnB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,UAAU,WAAW6H,GAAI,GAC5B,kBAACtH,EAAA,EAAD,CAAKP,UAAU,SACb,oDAEF,kBAACO,EAAA,EAAD,KACE,8JAKF,kBAACA,EAAA,EAAD,KACE,kBAACmJ,EAAA,EAAD,CAAM1J,UAAU,QACd,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,WACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,oBACZ1C,KAAK,iBACLC,SAAUsC,KAAKrB,iBAKvB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,OACZ1C,KAAK,WACLC,SAAUsC,KAAKrB,gBAIrB,kBAAC/F,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,YACZ1C,KAAK,gBACLC,SAAUsC,KAAKrB,iBAKvB,kBAACmD,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,UACZ1C,KAAK,SACLC,SAAUsC,KAAKrB,eAGnB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,kBACZ1C,KAAK,QACLC,SAAUsC,KAAKrB,gBAIrB,kBAAC/F,EAAA,EAAD,KACE,kBAACkJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,WACpB,kBAACF,EAAA,EAAKG,QAAN,CACEnK,KAAK,OACLqI,YAAY,SACZ1C,KAAK,QACLC,SAAUsC,KAAKrB,iBAKvB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0H,GAAI,GACP,kBAACwB,EAAA,EAAKC,MAAN,CACE3J,UAAU,iBACV4J,UAAU,eAEV,kBAACF,EAAA,EAAKM,MAAN,CAAYJ,UAAU,eAAtB,wBAGA,kBAACF,EAAA,EAAKW,MAAN,CACE3K,KAAK,WACL2F,KAAK,OACLiF,MAAM,OACNhF,SAAUsC,KAAKrB,cAEjB,kBAACmD,EAAA,EAAKW,MAAN,CACE3K,KAAK,WACL2F,KAAK,UACLiF,MAAM,OACNhF,SAAUsC,KAAKrB,gBAIrB,kBAAC/F,EAAA,EAAD,CAAK0H,GAAI,GACP,kBAACwB,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKM,MAAN,iCACA,kBAACN,EAAA,EAAKW,MAAN,CACE3K,KAAK,WACL2F,KAAK,QACLiF,MAAM,aACNhF,SAAUsC,KAAKrB,cAEjB,kBAACmD,EAAA,EAAKW,MAAN,CACE3K,KAAK,WACL2F,KAAK,YACLiF,MAAM,gBACNhF,SAAUsC,KAAKrB,iBAKvB,kBAACmD,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKM,MAAN,oBAEE,uBAAGhK,UAAU,kBAAb,qGAKF,kBAAC0J,EAAA,EAAKG,QAAN,CACEnK,KAAK,WACLqI,YAAY,eACZ1C,KAAK,WACLC,SAAUsC,KAAKrB,eAGnB,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqH,GAAI,GACP,kBAAC6B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,6BACA,kBAACF,EAAA,EAAKW,MAAN,CACErK,UAAU,wBACVN,KAAK,WACL2F,KAAK,gBACLiF,MAAM,sCACNhF,SAAUsC,KAAKrB,YACfgE,UAAQ,IAEV,kBAAChK,EAAA,EAAD,CAAK3D,MAAO,CAAE4N,WAAY,OAAQlB,WAAY,SAC5C,uBACEtJ,UAAU,UACVyJ,KAAK,sBACLrE,OAAO,WAHT,UAUN,kBAAC5E,EAAA,EAAD,CAAKqH,GAAI,GACP,kBAACM,EAAA,EAAD,CACEnI,UAAU,eACVgG,QAAQ,UACRyE,OAAK,EACL/K,KAAK,SACL4D,QAASsE,KAAKsC,gBALhB,eAUF,uBAAGlK,UAAU,qBAAb,0cAWJ,kBAACQ,EAAA,EAAD,CAAKqH,GAAI,CAAE6C,KAAM,EAAGC,OAAQ,IAAM/C,KAAKnE,MAAMtE,iB,GA/OvB7B,c,mBCiFrB2S,I,OCxFW3S,Y,kDDexB,WAAYkG,GAAQ,IAAD,8BACjB,cAAMA,IAIR0M,QAAU,WACR,OAAI,EAAK1M,MAAM2M,MAEX,kBAAC7P,EAAA,EAAD,CAAW8P,OAAK,GACd,kBAAC7P,EAAA,EAAD,CAAKP,UAAU,WACb,kBAACqQ,GAAA,EAAD,CAAUrQ,UAAU,6BAClB,kBAACqQ,GAAA,EAASC,OAAV,CAAiBC,YAAU,EAACvK,QAAQ,UAAUjG,GAAG,kBAC/C,yBAAKqD,IAAI,qBAGX,kBAACiN,GAAA,EAASlB,KAAV,KACE,kBAACkB,GAAA,EAASrB,KAAV,CAAevF,KAAK,aAApB,WACA,kBAAC4G,GAAA,EAASrB,KAAV,CAAevF,KAAK,WAApB,UACA,kBAAC4G,GAAA,EAASrB,KAAV,CACE1L,QAAS,WACPrE,OAAOmJ,QAAQ,qCACf7J,aAAaiS,QACb,EAAKhN,MAAM6E,UAAS,GACpB,EAAK7E,MAAMyC,QAAQC,KAAK,MAE1BuD,KAAK,KAPP,oBAcJ,kBAACjJ,EAAA,EAAD,CAAKR,UAAU,cAAc6H,GAAI,IAC/B,kBAAC,IAAD,CAAMkC,GAAG,aACP,yBAAK3G,IAAI,6BAQjB,kBAAC9C,EAAA,EAAD,CAAW8P,OAAK,GACd,kBAAC7P,EAAA,EAAD,CAAKP,UAAU,WACb,kBAACqQ,GAAA,EAAD,CAAUrQ,UAAU,6BAClB,kBAACqQ,GAAA,EAASC,OAAV,CAAiBC,YAAU,EAACvK,QAAQ,UAAUjG,GAAG,kBAC/C,yBAAKqD,IAAI,qBAGX,kBAACiN,GAAA,EAASlB,KAAV,KACE,kBAACkB,GAAA,EAASrB,KAAV,CAAevF,KAAK,gBAApB,eACA,kBAAC4G,GAAA,EAASrB,KAAV,CAAevF,KAAK,KAApB,eAIJ,kBAACjJ,EAAA,EAAD,CAAKR,UAAU,cAAc6H,GAAI,IAC/B,kBAAC,IAAD,CAAMkC,GAAG,KACP,yBAAK3G,IAAI,8BAvDrB,EAAKK,MAAQ,GAFI,E,iEAmEjBmE,KAAKsI,Y,+BAGL,OAAO,yBAAKlQ,UAAU,iBAAiB4H,KAAKsI,e,GAvExB5S,c,6BE+IT0Q,G,kDApJb,WAAYxK,GAAQ,IAAD,8BACjB,cAAMA,IAMRiN,aAAe,SAACxL,GACd,IAAMC,EAAO,CACXwD,OACEnK,aAAaC,QACX,UAGJsH,OAAQ,EAAKrC,MAAMqC,QAGfzH,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAChBxG,cAAe,UAAYC,aAAaC,QAAQ,WAG5CnB,EAAU,CACde,OAAQ,SACRK,KAAMC,KAAKC,UAAUuG,GACrB7G,QAASA,GAGXF,MACE,qEACAd,GAECuB,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,WAEEK,OAAO0J,SAASc,KADL,yCAIb,SAACzK,GACCa,QAAQC,IAAId,OA1CD,EA+CnB0R,YAAc,WACZ,OACE,kBAAClD,EAAA,EAAD,CACE7H,KAAM,EAAKlC,MAAMkN,UACjBlD,OAAQ,WACN,EAAK/H,SAAS,CAAEiL,WAAW,MAG7B,kBAACnD,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,CAAa/N,UAAU,cAAvB,yBAEF,kBAACwN,EAAA,EAAMnC,KAAP,CAAYrL,UAAU,aAAtB,gEACgE,KAEhE,kBAACwN,EAAA,EAAMQ,OAAP,KACE,kBAAC7F,EAAA,EAAD,CACEnI,UAAU,oBACVgG,QAAQ,YACR1C,QAAS,WACP,EAAKmN,iBAJT,aASA,kBAACtI,EAAA,EAAD,CACEnI,UAAU,oBACVgG,QAAQ,UACR1C,QAAS,WACP,EAAKoC,SAAS,CAAEiL,WAAW,MAJ/B,cArEN,EAAKlN,MAAQ,CACXkN,WAAW,GAHI,E,qDAoFT,IAAD,OACP,OACE,yBAAK3Q,UAAU,UACZ4H,KAAK8I,cACN,kBAAC,KAAD,CAAQE,MAAM,SAASC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,WACrD,kBAAC,KAAOC,MAAR,CAAcvH,KAAK,QAAQzJ,UAAU,cAArC,gBAGA,kBAAC,KAAOsQ,OAAR,CAAeW,gBAAc,0BAC7B,kBAAC,KAAOC,SAAR,CAAiBnR,GAAG,yBAClB,kBAACoR,GAAA,EAAD,CAAKnR,UAAU,WACb,kBAACmR,GAAA,EAAIC,KAAL,CACE3H,KAAK,yCACLzJ,UAAU,cAFZ,uBAMA,kBAACmR,GAAA,EAAIC,KAAL,CAAU3H,KAAK,cAAczJ,UAAU,cAAvC,OAGA,kBAACmR,GAAA,EAAIC,KAAL,CACE3H,KAAK,sEACLzJ,UAAU,cAFZ,sBAMA,kBAACmR,GAAA,EAAIC,KAAL,CACE3H,KAAK,mCACLzJ,UAAU,cAFZ,WAMA,kBAACmR,GAAA,EAAIC,KAAL,CACE3H,KAAK,iCACLzJ,UAAU,cAFZ,WAMA,kBAACmR,GAAA,EAAIC,KAAL,CACEpR,UAAU,aACVsD,QAAS,kBAAM,EAAKoC,SAAS,CAAEiL,WAAW,MAF5C,yBAOF,kBAACQ,GAAA,EAAD,KAIE,kBAACA,GAAA,EAAIC,KAAL,CACEC,SAAU,EACV5H,KAAK,0BACLzJ,UAAU,cAHZ,oB,GAtIO1C,a,2DCLrB,SAASgU,KAAoB,IAAD,EACF5Q,oBAAS,GADP,mBACnBiF,EADmB,KACb4H,EADa,OAEK7M,mBAAS,IAFd,mBAEnB6Q,EAFmB,KAEXC,EAFW,OAGI9Q,mBAAS,KAHb,mBAGVkE,GAHU,WAK1BxC,qBAAU,WACRqP,MACC,IAEH,IAAMA,EAAgB,WACpB,IAAMpT,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAEhBxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MACE,kEANc,CACdC,OAAQ,MACRC,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACC,IAAM2M,EAAa3M,EACnByM,GAAa,SAACG,GAAD,6BAAaA,GAAb,CAAkBD,UAGjC,SAAC1S,GACCa,QAAQC,IAAId,OAgEpB,OACE,oCACE,kBAAC4S,GAAA,EAAD,CAAOjM,KAAMA,EAAMK,QAAQ,UACzB,kBAAC4L,GAAA,EAAMC,QAAP,gDACA,6GAGA,6BACA,yBAAK7R,UAAU,8BACb,kBAACmI,EAAA,EAAD,CACE7E,QAAS,YArEG,WACpB,IAAMjF,EAAU,IAAIyG,QAAQ,CAC1B,eAAgB,mBAEhBxG,cAAe,UAAYC,aAAaC,QAAQ,WAQlDL,MACE,gEANc,CACdC,OAAQ,SACRC,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACmG,GACCH,EAAWG,EAAe5F,YAG5B,SAACH,GACCa,QAAQC,IAAId,MA6CR8S,IAEF9L,QAAQ,kBAJV,8BAQA,kBAACmC,EAAA,EAAD,CAAQ7E,QAAS,kBAAMiK,GAAQ,IAAQvH,QAAQ,mBAA/C,+BAKJ,yBAAKhG,UAAU,aACb,yDACA,yBAAK+R,MAAM,oBACT,4BAAQ/R,UAAU,cAAcsD,QAAS,kBAAMiK,GAAQ,KAAvD,6BAGA,kBAAC,KAAD,CACExN,GAAG,wBACHC,UAAU,cACVgS,MAAM,eACNC,SAAS,WACTC,MAAM,WACNtJ,WAAW,sBAEb,kBAACuJ,GAAA,EAAD,CAAOpS,GAAG,eAAeqS,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC7C,wBAAItS,UAAU,cAAd,OACA,wBAAIA,UAAU,cAAd,UACA,wBAAIA,UAAU,cAAd,QACA,wBAAIA,UAAU,cAAd,mBACA,wBAAIA,UAAU,cAAd,OACA,+BAtEDuR,EAAOxF,KAAI,SAACC,EAAS8C,GAC1B,OACE,4BACE,wBAAIpP,KAAK,OAAOK,GAAG,YAAYsF,KAAK,aACjC,IACA2G,EAAQ4D,WAEX,wBAAIlQ,KAAK,OAAOK,GAAG,WAAWsF,KAAK,YAChC,IACA2G,EAAQ6D,UAEX,wBAAInQ,KAAK,OAAOK,GAAG,QAAQsF,KAAK,SAC7B,IACA2G,EAAQ3E,OAEX,wBAAI3H,KAAK,OAAOK,GAAG,QAAQsF,KAAK,SAC7B,IACA2G,EAAQzE,OAEX,wBAAI7H,KAAK,OAAOK,GAAG,MAAMsF,KAAK,OAC3B,IACA2G,EAAQuG,c,IA+DNC,G,uKAJX,OAAO,kBAAClB,GAAD,U,GAFchU,aC5EVmV,G,kDA5Db,WAAYjP,GAAQ,IAAD,8BACjB,cAAMA,IAWR6E,SAAW,SAAC7B,GACV,EAAKd,SAAS,CAAEyK,MAAO3J,KAXvB,EAAK/C,MAAQ,CACX0M,OAAO,GAHQ,E,gEAQoB,MAAjC5R,aAAaC,QAAQ,UACvBoJ,KAAKlC,SAAS,CAAEyK,OAAO,M,+BAMjB,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,KACE,kBAACuC,GAAD,CAAQrK,SAAUT,KAAKS,SAAU8H,MAAOvI,KAAKnE,MAAM0M,QAEnD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEwC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAACrP,GAAD,OACN,kBAAC,EAAD,eAAW6E,SAAU,EAAKA,UAAc7E,OAG5C,kBAAC,IAAD,CACEoP,KAAK,YACLC,OAAQ,SAACrP,GAAD,OACN,kBAAC,GAAD,eAAU6E,SAAU,EAAKA,UAAc7E,OAI3C,kBAAC,IAAD,CAAOoP,KAAK,eAAeE,UAAW7I,IACtC,kBAAC,IAAD,CACE2I,KAAK,UACLC,OAAQ,SAACrP,GAAD,OAAW,kBAAC,EAAD,eAAQ6E,SAAU,EAAKA,UAAc7E,OAE1D,kBAAC,IAAD,CAAOoP,KAAK,cAAcE,UAAWN,KACrC,kBAAC,IAAD,CAAOI,KAAK,SAASE,UAAW3D,KAChC,kBAAC,IAAD,CAAOyD,KAAK,UAAUE,UAAWpH,IACjC,kBAAC,IAAD,CAAOkH,KAAK,cAAcE,UAAWzS,IACrC,kBAAC,IAAD,CAAOuS,KAAK,iBAAiBE,UAAWzD,KACxC,kBAAC,IAAD,CAAOuD,KAAK,iBAAiBE,UAAWrD,KACxC,kBAAC,IAAD,CACEmD,KAAK,qCACLE,UAAWnD,MAIf,kBAAC,GAAD,Y,GAtDQrS,aCPEyV,QACW,cAA7B9T,OAAO0J,SAASqK,UAEe,UAA7B/T,OAAO0J,SAASqK,UAEhB/T,OAAO0J,SAASqK,SAASzD,MACvB,2DCZN0D,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,GAAD,OAEF3Q,SAASC,eAAe,SDyHpB,kBAAmB2Q,WACrBA,UAAUC,cAAcC,MACrBzU,MAAK,SAAA0U,GACJA,EAAaC,gBAEdC,OAAM,SAAAxU,GACLa,QAAQb,MAAMA,EAAMG,c","file":"static/js/main.4f6162fa.chunk.js","sourcesContent":["/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Paiement\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CheckoutForm.css\";\r\nimport CardSection from \"../../assets/components/CardSection/CardSection\";\r\nimport { Alert } from \"bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\r\n          \"https://back-end.osc-fr1.scalingo.io/restaurateur/createsubscription\",\r\n          {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n              customerId: customerId,\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: \"price_1IGL9iHoh2Vgz5QdlyKQ9pDg\",\r\n            }),\r\n          }\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              window.alert(result.message);\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            window.alert(result.message);\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      {/* <Form.Check\r\n        className=\"checkboxRetRest\"\r\n        type=\"checkbox\"\r\n        name=\"retractation\"\r\n        label=\" Je renonce à mon droit de rétractation d'une durée de 14 jours, afin que le service commence immédiatement. \"\r\n        required\r\n     />*/}\r\n      <button className=\"submitButtonSubRestau\" disabled={!stripe}>\r\n        Devenir un restaurateur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./Abonnement.css\";\r\n\r\nimport CheckoutForm from \"../CheckoutForm/CheckoutForm\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_live_51HAxRlHoh2Vgz5Qdxu3AGz9GC1q2B453vaXplDn3J0Q5wXRCZqwkuoCG5O1Nsr1VsbNIHmjVWj7XJo9cZmljPw7L00wQbxBO6Y\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium restaurateur Tipourboire</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, {\r\n  Component,\r\n  Button,\r\n  Fragment,\r\n  useEffect,\r\n  createRef,\r\n  useState,\r\n} from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCode.css\";\r\nimport QRCODE from \"easyqrcodejs\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nfunction QrHook() {\r\n  const [restaurant, setRestaurant] = useState();\r\n  const componentRef = React.useRef(null);\r\n  const onBeforeGetContentResolve = React.useRef(null);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [text, setText] = React.useState(\"old boring text\");\r\n\r\n  //print QR code\r\n\r\n  const handleAfterPrint = React.useCallback(() => {\r\n    console.log(\"`onAfterPrint` called\"); // tslint:disable-line no-console\r\n  }, []);\r\n\r\n  const handleBeforePrint = React.useCallback(() => {\r\n    console.log(\"`onBeforePrint` called\"); // tslint:disable-line no-console\r\n  }, []);\r\n\r\n  const handleOnBeforeGetContent = React.useCallback(() => {\r\n    console.log(\"`onBeforeGetContent` called\"); // tslint:disable-line no-console\r\n    setLoading(true);\r\n    setText(\"Loading new text...\");\r\n\r\n    return new Promise((resolve) => {\r\n      onBeforeGetContentResolve.current = resolve;\r\n\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setText(\"New, Updated Text!\");\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n  }, [setLoading, setText]);\r\n\r\n  const reactToPrintContent = React.useCallback(() => {\r\n    return componentRef.current;\r\n  }, [componentRef.current]);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: reactToPrintContent,\r\n    documentTitle: \"AwesomeFileName\",\r\n    onBeforeGetContent: handleOnBeforeGetContent,\r\n    onBeforePrint: handleBeforePrint,\r\n    onAfterPrint: handleAfterPrint,\r\n    removeAfterPrint: true,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      text === \"New, Updated Text!\" &&\r\n      typeof onBeforeGetContentResolve.current === \"function\"\r\n    ) {\r\n      onBeforeGetContentResolve.current();\r\n    }\r\n  }, [onBeforeGetContentResolve.current, text]);\r\n\r\n  let uri =\r\n    \"https://back-end.osc-fr1.scalingo.io/client/getMenu?restaurantName=\" +\r\n    localStorage.getItem(\"propsRestaurant\");\r\n\r\n  useEffect(() => {\r\n    new QRCODE(document.getElementById(\"qrCodeDivResto\"), {\r\n      text: encodeURI(uri),\r\n      width: 100,\r\n      height: 100,\r\n      //title: \"Tipourboire\", // content\r\n      titleFont: \"bold 20px Montserrat\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      //subTitle: \"Votre menu du jour\", // content\r\n      subTitleFont: \" bold 16px Montserrat\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#4a4a4a\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n\r\n    new QRCODE(document.getElementById(\"qrCodeDivResto2\"), {\r\n      text: encodeURI(uri),\r\n      width: 100,\r\n      height: 100,\r\n      //title: \"Tipourboire\", // content\r\n      titleFont: \"bold 20px Montserrat\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      //subTitle: \"Votre menu du jour\", // content\r\n      subTitleFont: \" bold 16px Montserrat\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#4a4a4a\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"backgroundTicketVisibleWeb\">\r\n        <Col className=\"backColLeft\">\r\n          <Row className=\"rowCode\">\r\n            <Col>\r\n              <h4 className=\"titleName\">\r\n                {localStorage.getItem(\"propsRestaurant\")}\r\n              </h4>\r\n            </Col>\r\n            <Col className=\"paddingCode\">\r\n              <div id=\"qrCodeDivResto\" />\r\n            </Col>\r\n            <Col>\r\n              <img\r\n                src=\"/image/tipourboirePhrase.png\"\r\n                className=\"tipPictureWeb\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"backColRight\">\r\n          <Row className=\"rowCode2\">\r\n            <Col className=\"col2\">\r\n              {\" \"}\r\n              <img src=\"/image/logoCode.png\" className=\"tipPictureWeb\" />\r\n            </Col>\r\n            <Col className=\"col2\">\r\n              <img src=\"/image/justeUnMerci.png\" className=\"tipPictureWeb\" />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"QRPrint\">\r\n        <div id=\"qrCodePdf\" ref={componentRef}>\r\n          <Row className=\"backgroundTicket\">\r\n            <Col>\r\n              <Row className=\"rowCode\">\r\n                <Col>\r\n                  <p className=\"titleName\">\r\n                    {localStorage.getItem(\"propsRestaurant\")}\r\n                  </p>\r\n                </Col>\r\n                <Col>\r\n                  <div id=\"qrCodeDivResto2\" />\r\n                </Col>\r\n                <Col>\r\n                  <img\r\n                    src=\"/image/tipourboirePhrase.png\"\r\n                    className=\"tipPicture\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Row className=\"rowCode2\">\r\n                <Col className=\"col2\">\r\n                  {\" \"}\r\n                  <img src=\"/image/logoCode.png\" className=\"tipPicture\" />\r\n                </Col>\r\n                <Col className=\"col2\">\r\n                  <img src=\"/image/justeUnMerci.png\" className=\"tipPicture\" />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          {loading && <p className=\"indicator\">impression ...</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"buttonQrCode\" onClick={handlePrint}>\r\n        Imprimer le QR Code Table\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass QrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QrHook className=\"qr\" />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCode;\r\n","import React, { Component, Button, useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCodeTicket.css\";\r\nimport QRCODE from \"easyqrcodejs\";\r\n\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nfunction QrHookTicket(props) {\r\n  const componentRef = React.useRef(null);\r\n\r\n  const onBeforeGetContentResolve = React.useRef(null);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [text, setText] = React.useState(\"old boring text\");\r\n\r\n  //Print QR code\r\n\r\n  const handleAfterPrint = React.useCallback(() => {\r\n    console.log(\"`onAfterPrint` called\"); // tslint:disable-line no-console\r\n  }, []);\r\n\r\n  const handleBeforePrint = React.useCallback(() => {\r\n    console.log(\"`onBeforePrint` called\"); // tslint:disable-line no-console\r\n  }, []);\r\n\r\n  const handleOnBeforeGetContent = React.useCallback(() => {\r\n    console.log(\"`onBeforeGetContent` called\"); // tslint:disable-line no-console\r\n    setLoading(true);\r\n    setText(\"Loading new text...\");\r\n\r\n    return new Promise((resolve) => {\r\n      onBeforeGetContentResolve.current = resolve;\r\n\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setText(\"New, Updated Text!\");\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n  }, [setLoading, setText]);\r\n\r\n  const reactToPrintContent = React.useCallback(() => {\r\n    return componentRef.current;\r\n  }, [componentRef.current]);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: reactToPrintContent,\r\n    documentTitle: \"AwesomeFileName\",\r\n    onBeforeGetContent: handleOnBeforeGetContent,\r\n    onBeforePrint: handleBeforePrint,\r\n    onAfterPrint: handleAfterPrint,\r\n    removeAfterPrint: true,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      text === \"New, Updated Text!\" &&\r\n      typeof onBeforeGetContentResolve.current === \"function\"\r\n    ) {\r\n      onBeforeGetContentResolve.current();\r\n    }\r\n  }, [onBeforeGetContentResolve.current, text]);\r\n\r\n  let uri =\r\n    \"https://back-end.osc-fr1.scalingo.io/client/getMenuTicket?restaurantName=\" +\r\n    localStorage.getItem(\"propsRestaurant\");\r\n\r\n  useEffect(() => {\r\n    new QRCODE(document.getElementById(\"qrCodeDiv\"), {\r\n      text: encodeURI(uri),\r\n      width: 100,\r\n      height: 100,\r\n      //title: \"Tipourboire\", // content\r\n      titleFont: \"bold 20px  Montserrat\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      //subTitle: \"Scannez & Donnez \", // content\r\n      subTitleFont: \"bold 16px Montserrat\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#4a4a4a\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n\r\n    new QRCODE(document.getElementById(\"qrCodeDiv2\"), {\r\n      text: encodeURI(uri),\r\n      width: 100,\r\n      height: 100,\r\n      //title: \"Tipourboire\", // content\r\n      titleFont: \"bold 20px  Montserrat\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      //subTitle: \"Scannez & Donnez \", // content\r\n      subTitleFont: \"bold 16px Montserrat\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#4a4a4a\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"backgroundTicketVisibleWeb\">\r\n        <Col className=\"backColLeft\">\r\n          <Row className=\"rowCode\">\r\n            <Col>\r\n              <h4 className=\"titleName\">\r\n                {localStorage.getItem(\"propsRestaurant\")}\r\n              </h4>\r\n            </Col>\r\n            <Col className=\"paddingCode\">\r\n              <div id=\"qrCodeDiv\" />\r\n            </Col>\r\n            <Col>\r\n              <img\r\n                src=\"/image/tipourboirePhrase.png\"\r\n                className=\"tipPictureWeb\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"backColRight\">\r\n          <Row className=\"rowCode2Web\">\r\n            <Col className=\"col2\">\r\n              {\" \"}\r\n              <img src=\"/image/logoCode.png\" className=\"tipPictureWeb\" />\r\n            </Col>\r\n            <Col className=\"col2\">\r\n              <img src=\"/image/justeUnMerci.png\" className=\"tipPictureWeb\" />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"QRPrint\">\r\n        <div id=\"qrCodePdf\" ref={componentRef}>\r\n          <Row className=\"backgroundTicket\">\r\n            <Col>\r\n              <Row className=\"rowCode\">\r\n                <Col>\r\n                  <p className=\"titleName\">\r\n                    {localStorage.getItem(\"propsRestaurant\")}\r\n                  </p>\r\n                </Col>\r\n                <Col>\r\n                  <div id=\"qrCodeDiv2\" />\r\n                </Col>\r\n                <Col>\r\n                  <img\r\n                    src=\"/image/tipourboirePhrase.png\"\r\n                    className=\"tipPicture\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Row className=\"rowCode2\">\r\n                <Col className=\"col2\">\r\n                  {\" \"}\r\n                  <img src=\"/image/logoCode.png\" className=\"tipPicture\" />\r\n                </Col>\r\n                <Col className=\"col2\">\r\n                  <img src=\"/image/justeUnMerci.png\" className=\"tipPicture\" />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          {loading && <p className=\"indicator\">impression ...</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={handlePrint} className=\"buttonQrCode\">\r\n        Imprimez votre étiquette\r\n      </button>\r\n      {/*<button\r\n        className=\"buttonQrCode\"\r\n        onClick={() => {\r\n          const canvas = document.querySelector(\"#qrCodePdf canvas\");\r\n          const image = canvas.toDataURL();\r\n          const element = document.createElement(\"a\");\r\n          element.setAttribute(\"href\", image);\r\n          element.setAttribute(\"download\", \"canvas.png\");\r\n          document.body.appendChild(element);\r\n          element.click();\r\n        }}>\r\n        Télécharger le QR Code Ticket\r\n      </button>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass QrCodeTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLoading: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QrHookTicket className=\"qr\" />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCodeTicket;\r\n","import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAut6vqnimGfA8-stmTnB-q4tyrXv2aJow\",\n    authDomain: \"tipourboire-57c09.firebaseapp.com\",\n    projectId: \"tipourboire-57c09\",\n    storageBucket: \"tipourboire-57c09.appspot.com\",\n    messagingSenderId: \"592397685193\",\n    appId: \"1:592397685193:web:e6c6a5fca6aeccef5f1818\",\n    measurementId: \"G-5LS7DQYY60\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n  var storage = firebase.storage();\n  export default storage","import React, { Component, Input, useEffect, useState } from \"react\";\r\nimport { Col, Row, Container, Button, Modal } from \"react-bootstrap\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport \"./profil.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport storage from \"../../firebase\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nfunction UploadPicture() {\r\n  const [imageStorage, setImageStorage] = useState(\"\");\r\n  const [images, setImages] = useState(\"\");\r\n  const [label, setLabel] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dailyMenu, setDailyMenu] = useState({});\r\n\r\n  const getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          console.log(responseObject);\r\n          setImages(responseObject.logo);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit/logo\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          setMessage(responseObject.message);\r\n          const headers = new Headers({\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n          });\r\n\r\n          const options = {\r\n            method: \"GET\",\r\n            headers: headers,\r\n          };\r\n\r\n          fetch(\r\n            \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\",\r\n            options\r\n          )\r\n            .then((response) => {\r\n              return response.json();\r\n            })\r\n            .then(\r\n              (responseObject) => {\r\n                setImageStorage(responseObject.logo);\r\n                getMonProfil();\r\n              },\r\n\r\n              (error) => {\r\n                console.log(error);\r\n              }\r\n            );\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMonProfil();\r\n  }, []);\r\n\r\n  return (\r\n    <Col className=\"addImage\">\r\n      <h1 className=\"title\">Mon Logo </h1>\r\n      <form onSubmit={modifProfilLogo} className=\"formLogo\">\r\n        <img\r\n          className=\"restaurantLogo\"\r\n          src={\r\n            \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" + images\r\n          }></img>\r\n        <br />\r\n        <br />\r\n        <input\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={(e) => {\r\n            setImageStorage(e.target.files[0]);\r\n          }}\r\n        />\r\n        <br />\r\n        <button className=\"buttonVal\" type=\"submit\">\r\n          Valider\r\n        </button>\r\n      </form>\r\n    </Col>\r\n  );\r\n}\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: {},\r\n      editing: true,\r\n      show: false,\r\n      redirect: false,\r\n      checkGeneral: false,\r\n      checkIndividuel: false,\r\n    };\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.profil.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}>\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}>\r\n            Souscrire à l'abonnement Premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  buttonEdit = () => {\r\n    if (this.state.editing == true) {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.setState({ editing: false });\r\n            }}>\r\n            Modifier <br />\r\n          </button>\r\n          {this.renderButtonSub()}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"button\" onClick={this.putProfilOnClick}>\r\n          Confirmer Modification\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  buttonCancel = () => {\r\n    if (this.state.editing == false) {\r\n      return (\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            this.setState({ editing: true });\r\n            this.getMonProfil();\r\n          }}>\r\n          Annuler\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  handleInput = (event) => {\r\n    let profil = this.state.profil;\r\n    profil[event.target.name] = event.target.value;\r\n    this.setState({\r\n      profil: profil,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n  /* Affichage Profil */\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n\r\n          localStorage.setItem(\r\n            \"propsRestaurant\",\r\n            JSON.stringify(responseObject.restaurantName)\r\n          );\r\n          this.setState({ checkGeneral: responseObject.pourboireGeneral });\r\n          this.setState({\r\n            checkIndividuel: responseObject.pourboireIndividuel,\r\n          });\r\n          console.log();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  unSubscription = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ profil: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du profil */\r\n  modifProfil = () => {\r\n    const data = {\r\n      restaurantName: this.state.profil.restaurantName,\r\n      bossName: this.state.profil.bossName,\r\n      adress: this.state.profil.adress,\r\n      city: this.state.profil.city,\r\n      email: this.state.profil.email,\r\n      bossFirstName: this.state.profil.bossFirstName,\r\n      phone: this.state.profil.phone,\r\n      pourboireGeneral: this.state.checkGeneral,\r\n      pourboireIndividuel: this.state.checkIndividuel,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ editing: true });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du logo */\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit/logo\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  postParrainage = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/emailParrainage?_id=\" +\r\n        this.state.email +\r\n        \"&mailSender=\" +\r\n        this.state.profil.email,\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n\r\n  putProfilOnClick = () => {\r\n    this.modifProfil();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n\r\n    console.log(\"stateIndiv\", this.state.checkIndividuel);\r\n    console.log(\"stateIndiv\", this.state.checkGeneral);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"styleProfil parrainage\">\r\n        <UploadPicture />\r\n        <Row>\r\n          <Col md={12} className=\"formProfil \">\r\n            <h1 className=\"title\">Mes informations </h1>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <h1 className=\"textProfilTitre\">\r\n                  {this.state.profil.restaurantName}\r\n                </h1>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.restaurantName}\r\n                  name=\"restaurantName\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.bossFirstName}\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossFirstName\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossFirstName}\r\n                />\r\n              )}\r\n            </p>\r\n\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.bossName}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossName\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossName}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.adress}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"adress\"\r\n                  placeholder=\"Adresse\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.adress}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.city}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  placeholder=\"Ville\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.city}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.email}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.email}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.phone}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.phone}\r\n                  placeholder=\"Téléphone\"\r\n                  name=\"phone\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            {this.state.editing ? (\r\n              <div>\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.pourboireGeneral\r\n                    ? \"Pourboire Général Autorisé\"\r\n                    : \"Pourboire Général Refusé\"}\r\n                </span>\r\n                <br />\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.pourboireIndividuel\r\n                    ? \"Pourboire Individuel Autorisé\"\r\n                    : \"Pourboire Individuel Refusé\"}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  <input\r\n                    className=\"labelMargin\"\r\n                    type=\"checkbox\"\r\n                    id=\"individuel\"\r\n                    name=\"individuel\"\r\n                    checked={this.state.checkIndividuel}\r\n                    onChange={() => {\r\n                      this.setState({\r\n                        checkIndividuel: !this.state.checkIndividuel,\r\n                      });\r\n                    }}\r\n                  />\r\n                  <label for=\"individuel\">Pourboire individuel</label>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className=\"labelMargin\"\r\n                    type=\"checkbox\"\r\n                    id=\"general\"\r\n                    name=\"general\"\r\n                    checked={this.state.checkGeneral}\r\n                    onChange={() => {\r\n                      this.setState({ checkGeneral: !this.state.checkGeneral });\r\n                    }}\r\n                  />\r\n                  <label className=\"labelMargin\" for=\"general\">\r\n                    Pourboire Général\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.buttonEdit()}\r\n\r\n            {this.buttonCancel()}\r\n          </Col>\r\n          <Row>\r\n            <Col className=\"colParrainage\">\r\n              <Row>\r\n                <Col md={12}>\r\n                  <label className=\"demandeParrainage\">\r\n                    Parrainer un Serveur et/ou Restaurateur\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"rowParrain\">\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    onChange={this.handleInput}\r\n                    placeholder=\"Email du parrainé\"\r\n                    className=\"inputParrainage\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Envoyer\"\r\n                    onClick={this.postParrainage}\r\n                    className=\"buttonParrainage\"\r\n                  />\r\n                  <p className=\"infoParrainage\">\r\n                    \" Vous êtes satisfaits : parlez-en autour de vous ! A chaque\r\n                    parrainage d'un restaurateur, vous et votre confrère gagnez\r\n                    2 mois d'abonnements Premium \"\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Col className=\"formProfil nomProfil center\">\r\n            <h1 className=\"title\">Mes QR Codes </h1>\r\n            <Row className=\"rowCenter\">\r\n              <Col xs={6} md={6}>\r\n                <p>QR CODE Ticket </p>\r\n                <p className=\"qrSub\">\r\n                  à insérer sur vos tickets d'addition depuis votre logiciel de\r\n                  caisse\r\n                </p>\r\n\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"rowCenter\">\r\n              <Col xs={6} md={6}>\r\n                <p className=\"qr\"> QR CODE Table </p>\r\n                <p className=\"qrSub\">\r\n                  à imprimer et coller sur les tables de votre restaurant\r\n                </p>\r\n\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <br />\r\n            <Button\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              className=\"signOut1 button\">\r\n              Déconnexion\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport CookieConsent from \"react-cookie-consent\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/homepage\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <CookieConsent\r\n          location=\"top\"\r\n          buttonText=\"J'accepte\"\r\n          declineButtonText=\"Je refuse\"\r\n          expires={30}\r\n          enableDeclineButton\r\n          onDecline={() => {\r\n            alert(\r\n              \"Le refus de nos cookies vous permets tout de même une bonne navigation sur notre site. A bientot :)\"\r\n            );\r\n          }}\r\n          cookieName=\"Tipourboire\"\r\n          style={{ background: \"#ffffff\", color: \"#555\" }}\r\n          declineButtonStyle={{\r\n            borderRadius: 12,\r\n            padding: 8,\r\n            color: \"#fff\",\r\n            fontSize: \"18px\",\r\n            background: \"#f5a624\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          buttonStyle={{\r\n            borderRadius: 12,\r\n            padding: 8,\r\n            color: \"#fff\",\r\n            fontSize: \"18px\",\r\n            background: \"#f5a624\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          style={{\r\n            fontSize: \"20px\",\r\n            fontfamily: \"Montserrat\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          Le Site Tipourboire utilise différents cookies afin d’améliorer ses\r\n          services et effectuer des suivis d’audience. Certains cookies sont\r\n          indispensables au fonctionnement du Site. Vous pouvez accepter ces\r\n          cookies, les refuser, ou gérer vos préférences. Vous pouvez consulter\r\n          notre{\" \"}\r\n          <a\r\n            href=\"/cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n            target=\"_blank\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              fontfamily: \"Montserrat\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Politique de cookies\r\n          </a>\r\n        </CookieConsent>\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.handleInput}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.handleInput}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.addLogin}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./Inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurantName: \"\",\r\n      checkIndiv: true,\r\n      checkGen: true,\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/inscription\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"Bloc-principal\">\r\n        <Row>\r\n          <Col className=\"colInscr\" md={6}>\r\n            <Row className=\"Titre\">\r\n              <h1>Créer mon compte restaurateur</h1>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Form className=\"form\" onSubmit={this.addNewRegister}>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formNom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom du restaurant\"\r\n                        name=\"restaurantName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formPrenom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom \"\r\n                        name=\"bossName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formDate\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Prénom\"\r\n                        name=\"bossFirstName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formAdresse\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Adresse\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formCity\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"city\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formVille\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Téléphone\"\r\n                        name=\"phone\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formTel\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <Form.Group\r\n                      className=\"servicePropose\"\r\n                      controlId=\"formService\">\r\n                      <Form.Label controlId=\"formService\">\r\n                        Services proposés\r\n                      </Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"noon\"\r\n                        label=\"Midi\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <Form.Group controlId=\"formService\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"individuel\"\r\n                        name=\"alone\"\r\n                        checked={this.state.checkIndividuel}\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <label for=\"individuel\">Pourboire individuel</label>\r\n                      <br />\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"general\"\r\n                        name=\"collectif\"\r\n                        checked={this.state.checkGeneral}\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <label for=\"general\">Pourboire Général</label>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formPass\">\r\n                  <Form.Label>\r\n                    Mot de passe\r\n                    <p className=\"detailPassword\">\r\n                      8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\r\n                      chiffre et 1 caractère spécial\r\n                    </p>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col md={9}>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <br />\r\n                      <Form.Check\r\n                        className=\"checkboxCGU\"\r\n                        type=\"checkbox\"\r\n                        name=\"acceptControl\"\r\n                        label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                        onChange={this.handleInput}\r\n                        required\r\n                      />\r\n                      <Row style={{ marginLeft: \"10px\", fontWeight: \"bold\" }}>\r\n                        <a\r\n                          className=\"cgvLink\"\r\n                          href=\"/CGV_TIPTOTHANK.pdf\"\r\n                          target=\"_blanck\">\r\n                          CGU\r\n                        </a>\r\n                      </Row>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Button\r\n                      className=\"submitButtonRestau\"\r\n                      block\r\n                      type=\"submit\"\r\n                      block\r\n                      type=\"submit\">\r\n                      S'inscrire\r\n                    </Button>\r\n                  </Col>\r\n                  <p className=\"annonce\">\r\n                    *TIPOURBOIRE est responsable du traitement des données\r\n                    personnelles collectées sur ce site. Elles sont collectées\r\n                    aux fins de : l'exécution du contrat/vous informer de nos\r\n                    nouveautés et actualités/à des fins statistiques, les bases\r\n                    légales respectives des traitements pouvant être l'exécution\r\n                    du contrat, l'intérêt légitime, ou le consentement. Pour\r\n                    plus d'informations voir notre politique de confidentialité.\r\n                  </p>\r\n                </Row>\r\n              </Form>\r\n              <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./ConnexionAbo.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\", redirect: false };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/abonnement\" />;\r\n    }\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/loginAbo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n        localStorage.setItem(\"token\", responseData.token);\r\n        localStorage.setItem(\"userID\", responseData.userId);\r\n        this.setState({ redirect: true });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"connexion-container\">\r\n          <h1 className=\"titreConnexion\">Connexion</h1>\r\n\r\n          <Form className=\"identifiants\">\r\n            <Form.Row className=\"align-items-center\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Username\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Mot de passe\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Mot de passe\"\r\n                    type=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mb-2\"\r\n                  className=\"sign-up\"\r\n                  onClick={this.addLogin}\r\n                >\r\n                  Se connecter\r\n                </Button>\r\n                <p className=\"mdp\">Mot de passe oublié</p>\r\n              </Col>\r\n            </Form.Row>\r\n            <div className=\"inscription\">\r\n              <Link className=\"mdp\" to=\"/inscription\">\r\n                Vous n'êtes pas encore inscrit ? C'est par ici\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n          {this.redirect()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport storage from \"../../../firebase\";\r\n\r\nimport \"./DailyMenu.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UploadMenu() {\r\n  const [imageStorage, setImageStorage] = useState(\"\");\r\n  const [images, setImages] = useState(\"\");\r\n  const [label, setLabel] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dailyMenu, setDailyMenu] = useState({});\r\n\r\n  const upload = (e) => {\r\n    if (imageStorage == null) return;\r\n    storage\r\n      .ref(`/DailyMenu/${imageStorage.name}`)\r\n      .put(imageStorage)\r\n      .on(\"state_changed\", alert(\"Votre menu a bien été enregistré\"), alert);\r\n  };\r\n\r\n  const getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          setImages(data.menu.dailyMenu.picture);\r\n          setLabel(data.menu.dailyMenu.label);\r\n          setDailyMenu(data.menu);\r\n          console.log(\"image\", data.menu.dailyMenu.picture);\r\n          console.log(\"image\", images);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n  const deleteMenu = (e) => {\r\n    window.confirm(\"Etes-vous sur de vouloir supprimer le menu du jour ?\");\r\n    e.preventDefault();\r\n    const data = {\r\n      dailyMenu: dailyMenu,\r\n    };\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          setMessage(responseData.message);\r\n          getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDailyMenu();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"dailyMenuContain\">\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Link className=\"linkButton\" to=\"/menus\">\r\n            <h1 className=\"menujour\">Menu du Jour</h1>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"colMenu\" md={12}>\r\n          <form\r\n            className=\"formMenu\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n\r\n              const data = new FormData(e.target);\r\n\r\n              const headers = new Headers({\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"PUT\",\r\n                body: data,\r\n                headers: headers,\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/add\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (responseData) => {\r\n                    setMessage(responseData.message);\r\n\r\n                    const headers = new Headers({\r\n                      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n                    });\r\n\r\n                    const options = {\r\n                      method: \"GET\",\r\n                      headers: headers,\r\n                    };\r\n\r\n                    fetch(\r\n                      \"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\",\r\n                      options\r\n                    )\r\n                      .then((response) => {\r\n                        return response.json();\r\n                      })\r\n                      .then(\r\n                        (data) => {\r\n                          setImageStorage(data.menu.dailyMenu.picture);\r\n                          setLabel(data.menu.dailyMenu.label);\r\n                          setDailyMenu(data.menu);\r\n                        },\r\n                        (err) => {\r\n                          console.log(err);\r\n                        }\r\n                      );\r\n                    getDailyMenu();\r\n                  },\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            <input\r\n              className=\"button\"\r\n              type=\"file\"\r\n              name=\"file\"\r\n              onChange={(e) => {\r\n                setImageStorage(e.target.files[0]);\r\n              }}\r\n            />\r\n            <button className=\"bouton\" type=\"submit\">\r\n              Valider\r\n            </button>\r\n          </form>\r\n\r\n          <Card.Body className=\"cardsupp\">\r\n            <p>{label}</p>\r\n\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" + images}\r\n              className=\"dailyMenu\"\r\n              alt=\"Menu du Jour\"\r\n            />\r\n\r\n            <button\r\n              className=\"boutonSupprimer\"\r\n              type=\"submit\"\r\n              onClick={() => deleteMenu()}\r\n            >\r\n              Supprimer le menu\r\n            </button>\r\n          </Card.Body>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return <UploadMenu />;\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component, Form, Label, Input } from \"react\";\r\nimport { Row, Col, Button, Container, Image } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\nimport \"./Personnel.css\";\r\nimport Icon from \"react-fa\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Personnel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] }, email: \"\" };\r\n  }\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-list\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(\"data\", data);\r\n          this.setState({ serveur: data });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  renderMesServeurs = () => {\r\n    return this.state.serveur.tabServeur.map((element) => {\r\n      return (\r\n        <div className=\"serveurDiv\">\r\n          <p className=\"serveurP\">{element.serveurName}</p>\r\n          <p className=\"serveurN\">{element.serveurLastName}</p>\r\n          <Image\r\n            className=\"serverPicture\"\r\n            src={\r\n              \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n              element.serveurPicture\r\n            }\r\n            roundedCircle\r\n          />\r\n          <br></br>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              const data = {\r\n                mail: element.serveurMail,\r\n              };\r\n\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"DELETE\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-delete\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n\r\n                .then(\r\n                  (data) => {\r\n                    this.getWaiterList();\r\n                  },\r\n\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}>\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addAffiliation = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/affiliation\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        if (responseData === true) {\r\n          alert(\"Votre demande a bien été prise en compte\");\r\n        } else {\r\n          alert(responseData.false);\r\n        }\r\n      });\r\n  };\r\n  addReferent = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/referent\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getWaiterList();\r\n  }\r\n\r\n  crew = () => {\r\n    if (!this.state.serveur) {\r\n      return (\r\n        <p className=\"affiliation\">Vous n'avez pas de personnel affilié</p>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col className=\"crewStyle\">\r\n          <Carousel\r\n            slidesPerPage={5}\r\n            slidesPerScroll={1}\r\n            clickToChange\r\n            centered\r\n            infinite={true}\r\n            breakpoints={{\r\n              1000: {\r\n                // these props will be applied when screen width is less than 1000px\r\n                slidesPerPage: 0,\r\n                clickToChange: false,\r\n                centered: false,\r\n              },\r\n              500: {\r\n                slidesPerPage: 1,\r\n                slidesPerScroll: 1,\r\n                clickToChange: false,\r\n                centered: false,\r\n\r\n                animationSpeed: 2000,\r\n                infinite: false,\r\n              },\r\n            }}>\r\n            {this.renderMesServeurs()}\r\n          </Carousel>\r\n        </Col>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"container personnel\">\r\n        <Row>\r\n          <Col>\r\n            <Link className=\"linkButton\" to=\"/equipe\">\r\n              <h1 className=\"title-container\">Gestion de mon équipe</h1>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colAffiliation\">\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addAffiliation}\r\n              className=\"button\"\r\n            />\r\n            <p className=\"infoAffi\">\r\n              \"Si votre serveur n'est pas encore sur Tipourboire. Demandez-lui\r\n              de créer son compte Tipourboire avant de lui envoyer votre mail\r\n              d'affiliation\"\r\n            </p>\r\n            {this.state.messageAffi}\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation d'un serveur referent (pourboire commun)\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addReferent}\r\n              className=\"button\"\r\n            />\r\n            <p className=\"infoAffi\">\r\n              \"Si votre serveur référent n'est pas encore sur Tipourboire.\r\n              Demandez-lui de créer son compte Tipourboire avant de lui envoyer\r\n              votre mail d'affiliation\"\r\n            </p>\r\n            <br />\r\n            {this.state.message}\r\n          </Col>\r\n        </Row>\r\n        <h1 className=\"titleWaiter\">Mon équipe </h1>\r\n        {this.crew()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Personnel;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\n\r\nimport { Image, Col, Row, Container, Button, Modal } from \"react-bootstrap\";\r\nimport \"./HomePage.css\";\r\n\r\nfunction Tuto() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"buttonTuto\" onClick={handleShow}>\r\n        Etapes obligatoires{\" \"}\r\n        <Button onClick={handleShow} className=\"flecheTuto\">\r\n          {\">\"}\r\n        </Button>\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        animation={true}\r\n        backdrop=\"static\"\r\n        keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Rappel d'utilisation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p className=\"title1\">\r\n            Pour que vos clients puissent donner des pourboires selon vos\r\n            règles,\r\n            <br /> vous devez:\r\n          </p>\r\n          <p className=\"para1\">\r\n            Mettre en évidence les QR Codes Tipourboire dans votre restaurant\r\n            <br /> <br />\r\n            QR Code addition\r\n            <br />\r\n            Insérez-le sur votre ticket d'addition avec votre logiciel de caisse\r\n            <br />\r\n            et/ou\r\n            <br />\r\n            Imprimez-le et mettez-le en évidence\r\n            <br />\r\n            à la caisse, sur le TPE, le support de l'addition, etc...\r\n            <br /> <br />\r\n            QR Code Menu du jour\r\n            <br />\r\n            Imprimez le et mettez-le sur chaque table, <br />\r\n          </p>\r\n          <p className=\"title1\">\r\n            Pour que vos équipes puissent recevoir des pourboires selon vos\r\n            règles,\r\n            <br /> vous devez:\r\n          </p>\r\n          <p className=\"para1\">\r\n            Demander à chaque personne de votre équipe (serveur, cuisinier,\r\n            plongeur, chef de rang, commis, runner, etc...) de créer son compte\r\n            sur serveur.tipourboire.com\r\n            <br /> <br />\r\n            Leur envoyer à chacun un mail d'affiliation depuis votre espace\r\n            Tipourboire, pour qu'il soit rattaché à votre établissement.\r\n            <br /> <br />\r\n            Envoyer à la personne en charge de la distribution des pourboires\r\n            (alias \"le serveur référant\"), un mail d'affiliation depuis votre\r\n            espace Tipourboire, pour qu'il puisse distribuer le pourboire commun\r\n            selon vos règles\r\n            <br />\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"modalButton\"\r\n            variant=\"secondary\"\r\n            onClick={handleClose}>\r\n            Fermer\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { restaurantName: \"\", isLoading: false };\r\n  }\r\n\r\n  handleAfterPrint = () => {\r\n    console.log(\"`onAfterPrint` called\"); // tslint:disable-line no-console\r\n  };\r\n\r\n  handleBeforePrint = () => {\r\n    console.log(\"`onBeforePrint` called\"); // tslint:disable-line no-console\r\n  };\r\n\r\n  handleOnBeforeGetContent = () => {\r\n    console.log(\"`onBeforeGetContent` called\"); // tslint:disable-line no-console\r\n    this.setState({ text: \"Loading new text...\", isLoading: true });\r\n\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        this.setState(\r\n          { text: \"New, Updated Text!\", isLoading: false },\r\n          resolve\r\n        );\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  reactToPrintTrigger = () => {\r\n    // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n    // to the root node of the returned component as it will be overwritten.\r\n\r\n    // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n    // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n    // Good\r\n    return <button>Print </button>;\r\n  };\r\n\r\n  getRestaurantName = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          localStorage.setItem(\r\n            \"propsRestaurant\",\r\n            JSON.stringify(responseObject.restaurantName)\r\n          );\r\n          this.setState({ restaurantName: responseObject.restaurantName });\r\n          this.setState({ abonne: responseObject.abonne });\r\n          console.log(\r\n            \"consolelog\",\r\n            JSON.parse(localStorage.getItem(\"propsRestaurant\"))\r\n          );\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}>\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}>\r\n            Souscrire à l'abonnement premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRestaurantName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Row className=\"rowGlobal\">\r\n          <Col md={10}>\r\n            <Personnel className=\"personnel\" />\r\n            <div className=\"titleQR\">{this.renderButtonSub()}</div>\r\n            <h1 className=\"titleQR\">Mes QR Codes</h1>\r\n\r\n            <Row className=\"rowGlobal\">\r\n              <Col md={{ span: 9, offset: 7 }} className=\"colTuto\">\r\n                <Tuto />\r\n              </Col>\r\n              <Row className=\"rowGlobal\">\r\n                <Col xs={12} s={12} md={6}>\r\n                  <p className=\"titleQR\">QR CODE Ticket </p>\r\n                  <p className=\"qrSub\">\r\n                    à insérer sur vos tickets d'addition depuis votre logiciel\r\n                    de caisse\r\n                  </p>\r\n                  <div>\r\n                    <QrCodeTicket\r\n                      className=\"qrCodeTicket\"\r\n                      restaurantName={this.state.restaurantName}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"rowGlobal\">\r\n                <Col xs={12} s={12} md={6}>\r\n                  <p className=\"titleQR\"> QR CODE Menu </p>\r\n                  <p className=\"qrSub\">\r\n                    à imprimer et coller sur les tables de votre restaurant\r\n                  </p>\r\n                  <QrCode\r\n                    className=\"qrCode\"\r\n                    restaurantName={this.state.restaurantName}\r\n                    restaurant=\"coucou\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n          </Col>\r\n          <Row className=\"rowGlobal\">\r\n            <Col md={6}>\r\n              <DailyMenu className=\"menuhome\" />\r\n            </Col>\r\n          </Row>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"./OtherMenu.css\";\r\nimport storage from \"../../../firebase\";\r\n\r\nclass OtherMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: { otherMenu: [] },\r\n    };\r\n  }\r\n  getOtherMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOtherMenu();\r\n  }\r\n\r\n  noMenu = () => {\r\n    if (this.state.menu.otherMenu && this.state.menu.otherMenu.length) {\r\n      return (\r\n        <div>\r\n          <Carousel>{this.display()}</Carousel>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Vous n'avez pas de menu pour l'instant</p>;\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/add\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteMenu = (e, index) => {\r\n    e.preventDefault();\r\n    const data = { picture: this.state.menu.otherMenu[index].picture };\r\n\r\n    const headers = new Headers({\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  display = () => {\r\n    let contentDisplay = [];\r\n    this.state.menu.otherMenu.map((element, index) => {\r\n      contentDisplay.push(\r\n        <Carousel.Item>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"https://back-end.osc-fr1.scalingo.io/\" + element.picture}\r\n            />\r\n            <Card.Body>\r\n              <Button\r\n                onClick={(e) => this.deleteMenu(e, index)}\r\n                className=\"buttonMenuSup\"\r\n              >\r\n                Supprimer le menu\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return contentDisplay;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"menuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"menu\">\r\n            <h2>Mes Menus</h2>\r\n          </Col>\r\n          <Col className=\"menuOther\" md={12}>\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n              />\r\n              <Button className=\"buttonMenu\" type=\"submit\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n            {this.noMenu()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport OtherMenu from \"../../assets/components/OtherMenu/OtherMenu\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menus\">\r\n        <Row>\r\n          <Col>\r\n            <DailyMenu />\r\n          </Col>\r\n          <Col md={12} sm={12}>\r\n            <OtherMenu />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component, useReducer } from \"react\";\nimport \"./inscriptionParrainage.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport firebase from \"firebase\";\n\nclass InscriptionParrainage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurantName: \"\",\n    };\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  addNewRegister = (e) => {\n    e.preventDefault();\n    const data = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      city: this.state.city,\n      adress: this.state.adress,\n      restaurantName: this.state.restaurantName,\n      bossFirstName: this.state.bossFirstName,\n      bossName: this.state.bossName,\n      noon: this.state.noon,\n      evening: this.state.evening,\n      pourboireGeneral: this.state.pourboireGeneral,\n      pourboireIndividuel: this.state.pourboireIndividuel,\n      date: this.state.date,\n      email: this.state.email,\n      phone: this.state.phone,\n      password: this.state.password,\n    };\n    const headers = new Headers({\n      \"X-Requested-With\": \"XMLHttpRequest\",\n      \"Content-Type\": \"application/json\",\n    });\n\n    const options = {\n      method: \"POST\",\n      body: data,\n      headers: headers,\n    };\n\n    fetch(\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/parrainInscription\",\n      options\n    )\n      .then((response) => {\n        return response.json();\n      })\n\n      .then(\n        (responseObject) => {\n          this.setState({ message: responseObject.message });\n        },\n\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <Container className=\"Bloc-principal\">\n        <Row>\n          <Col className=\"colInscr\" md={6}>\n            <Row className=\"Titre\">\n              <h1>Créer mon compte</h1>\n            </Row>\n            <Row>\n              <p>\n                Félicitation ! Vous avez été parrainé(e), veuillez remplir les\n                champs ci-dessous pour finaliser votre inscription.\n              </p>\n            </Row>\n            <Row>\n              <Form className=\"form\">\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"formNom\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nom du restaurant\"\n                        name=\"restaurantName\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"formPrenom\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nom \"\n                        name=\"bossName\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"formDate\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Prénom\"\n                        name=\"bossFirstName\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Form.Group controlId=\"formAdresse\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Adresse\"\n                    name=\"adress\"\n                    onChange={this.handleInput}\n                  />\n                </Form.Group>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"formVille\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Téléphone\"\n                        name=\"phone\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"formTel\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"E-mail\"\n                        name=\"email\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group\n                      className=\"servicePropose\"\n                      controlId=\"formService\"\n                    >\n                      <Form.Label controlId=\"formService\">\n                        Services proposés\n                      </Form.Label>\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"noon\"\n                        label=\"Midi\"\n                        onChange={this.handleInput}\n                      />\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"evening\"\n                        label=\"Soir\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group controlId=\"formService\">\n                      <Form.Label>Sytèmes de pourboires</Form.Label>\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"alone\"\n                        label=\"Individuel\"\n                        onChange={this.handleInput}\n                      />\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"Collectif\"\n                        label=\"Général\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Form.Group controlId=\"formPass\">\n                  <Form.Label>\n                    Mot de passe\n                    <p className=\"detailPassword\">\n                      8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\n                      chiffre et 1 caractère spécial\n                    </p>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Mot de passe\"\n                    name=\"password\"\n                    onChange={this.handleInput}\n                  />\n                </Form.Group>\n                <Row>\n                  <Col md={9}>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                      <br />\n                      <Form.Check\n                        className=\"checkboxCGUParrainage\"\n                        type=\"checkbox\"\n                        name=\"acceptControl\"\n                        label=\"J'ai lu et j'accepte les CGU et CGV\"\n                        onChange={this.handleInput}\n                        required\n                      />\n                      <Row style={{ marginLeft: \"10px\", fontWeight: \"bold\" }}>\n                        <a\n                          className=\"cgvLink\"\n                          href=\"/CGV_TIPTOTHANK.pdf\"\n                          target=\"_blanck\"\n                        >\n                          CGU\n                        </a>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                  <Col md={3}>\n                    <Button\n                      className=\"submitButton\"\n                      variant=\"primary\"\n                      block\n                      type=\"submit\"\n                      onClick={this.addNewRegister}\n                    >\n                      S'inscrire\n                    </Button>\n                  </Col>\n                  <p className=\"annonceParrainage\">\n                    *TIPOURBOIRE est responsable du traitement des données\n                    personnelles collectées sur ce site. Elles sont collectées\n                    aux fins de : l'exécution du contrat/vous informer de nos\n                    nouveautés et actualités/à des fins statistiques, les bases\n                    légales respectives des traitements pouvant être l'exécution\n                    du contrat, l'intérêt légitime, ou le consentement. Pour\n                    plus d'informations voir notre politique de confidentialité.\n                  </p>\n                </Row>\n              </Form>\n              <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default InscriptionParrainage;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./navBar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavLink,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/homepage\">Accueil</Dropdown.Item>\r\n                <Dropdown.Item href=\"/Profil\">Profil</Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/homepage\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/inscription\">Inscription</Dropdown.Item>\r\n                <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n  }\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n}\r\nexport default Barremenu;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Deconnexion.css\";\r\n\r\nclass Deconnexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"deconnect\">\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ redirect: true });\r\n          }}\r\n          className=\"signOut\"\r\n        >\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n        </button>\r\n        {this.redirect()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deconnexion;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n    };\r\n  }\r\n\r\n  deleteProfil = (e) => {\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/deleteRestaurant\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        () => {\r\n          let link = \"https://restaurant.tipourboire.com/\";\r\n          window.location.href = link;\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  modalDelete = () => {\r\n    return (\r\n      <Modal\r\n        show={this.state.showModal}\r\n        onHide={() => {\r\n          this.setState({ showModal: false });\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"modalTitle\">Supprimer mon compte</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modalBody\">\r\n          Etes vous sur de vouloir supprimer votre compte Tipourboire ?{\" \"}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"modalButtonDelete\"\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              this.deleteProfil();\r\n            }}\r\n          >\r\n            Supprimer\r\n          </Button>\r\n          <Button\r\n            className=\"modalButtonDelete\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.setState({ showModal: false });\r\n            }}\r\n          >\r\n            Annuler\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        {this.modalDelete()}\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"mentionsLegales/MentionsLégales.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link href=\"CGV/CGA.pdf\" className=\"textFooter\">\r\n                CGA\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"confidentialité/Politique_de_confidentialité_restaurateur.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                className=\"textFooter\"\r\n                onClick={() => this.setState({ showModal: true })}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/*<Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport \"./dataClient.css\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction AlertDismissible() {\r\n  const [show, setShow] = useState(false);\r\n  const [client, updateClient] = useState([]);\r\n  const [message, setMessage] = useState(\" \");\r\n\r\n  useEffect(() => {\r\n    getDataClient();\r\n  }, []);\r\n\r\n  const getDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/getDataClient\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          updateClient((arr) => [...arr, clientInfo]);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const unSubscrition = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/unsubscribe\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          setMessage(responseObject.message);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const display = () => {\r\n    return client.map((element, index) => {\r\n      return (\r\n        <tr>\r\n          <td type=\"text\" id=\"firstname\" name=\"firstname\">\r\n            {\" \"}\r\n            {element.firstname}\r\n          </td>\r\n          <td type=\"text\" id=\"lastname\" name=\"lastname\">\r\n            {\" \"}\r\n            {element.lastname}\r\n          </td>\r\n          <td type=\"text\" id=\"email\" name=\"email\">\r\n            {\" \"}\r\n            {element.email}\r\n          </td>\r\n          <td type=\"text\" id=\"phone\" name=\"phone\">\r\n            {\" \"}\r\n            {element.phone}\r\n          </td>\r\n          <td type=\"text\" id=\"age\" name=\"age\">\r\n            {\" \"}\r\n            {element.age}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Alert show={show} variant=\"danger\">\r\n        <Alert.Heading>Résiliation d'abonnement Tipourboire</Alert.Heading>\r\n        <p>\r\n          Êtes-vous bien sûr de vouloir résilier votre abonnement Tipourboire ?\r\n        </p>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button\r\n            onClick={() => {\r\n              unSubscrition();\r\n            }}\r\n            variant=\"outline-danger\"\r\n          >\r\n            Résilier mon abonnement\r\n          </Button>\r\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\r\n            Annuler la résiliation\r\n          </Button>\r\n        </div>\r\n      </Alert>\r\n      <div className=\"bloc-data\">\r\n        <h3>Base de données client</h3>\r\n        <div class=\"table-responsive\">\r\n          <button className=\"Telecharger\" onClick={() => setShow(true)}>\r\n            Résiliation abonnement\r\n          </button>\r\n          <ReactHTMLTableToExcel\r\n            id=\"test-table-xls-button\"\r\n            className=\"Telecharger\"\r\n            table=\"table-to-xls\"\r\n            filename=\"tablexls\"\r\n            sheet=\"tablexls\"\r\n            buttonText=\"Télécharger\"\r\n          />\r\n          <Table id=\"table-to-xls\" striped bordered hover>\r\n            <th className=\"colorTitre\">Nom</th>\r\n            <th className=\"colorTitre\">Prenom</th>\r\n            <th className=\"colorTitre\">Mail</th>\r\n            <th className=\"colorTitre\">Téléphone</th>\r\n            <th className=\"colorTitre\">Age</th>\r\n            <tbody>{display()}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nclass DataClient extends Component {\r\n  render() {\r\n    return <AlertDismissible />;\r\n  }\r\n}\r\n\r\nexport default DataClient;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Abonnement from \"../Abonnement/Abonnement\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport ConnexionAbo from \"../ConnexionAbo/ConnexionAbo\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport InscriptionParrainage from \"../InscriptionParrainage/inscriptionParrainage\";\r\nimport Navbar from \"../../assets/components/Navbar/Navbar\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport DataClient from \"../dataClient/dataClient\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Navbar setLogin={this.setLogin} login={this.state.login} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/homepage\"\r\n              render={(props) => (\r\n                <HomePage setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/profil\"\r\n              render={(props) => <Profil setLogin={this.setLogin} {...props} />}\r\n            />\r\n            <Route path=\"/dataClient\" component={DataClient} />\r\n            <Route path=\"/menus\" component={Menu} />\r\n            <Route path=\"/equipe\" component={Personnel} />\r\n            <Route path=\"/abonnement\" component={Abonnement} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n            <Route\r\n              path=\"/inscriptionParrainageRestaurateur\"\r\n              component={InscriptionParrainage}\r\n            />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}